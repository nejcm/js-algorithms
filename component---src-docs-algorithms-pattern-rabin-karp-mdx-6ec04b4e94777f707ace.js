(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{"s/Uj":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return m}));var n=a("Fcif"),r=a("+I+c"),b=(a("mXGw"),a("/FXl")),c=a("TjRS"),i=(a("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Algorithms/Pattern/RabinKarp.mdx"}});var o={_frontmatter:i},l=c.a;function m(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)(l,Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"rabin-karp"},"Rabin Karp"),Object(b.b)("p",null,"Is a string-searching algorithm created by Richard M. Karp and Michael O. Rabin (1987)\nthat uses hashing to find an exact match of a pattern string in a text. It uses a rolling\nhash to quickly filter out positions of the text that cannot match the pattern, and then\nchecks for a match at the remaining positions. Generalizations of the same idea can be\nused to find more than one match of a single pattern, or to find matches for more than one\npattern. (Source: Wikipedia)"),Object(b.b)("h2",{id:"complexity"},"Complexity"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Preprocessing"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Average"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Worst"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Space"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Comments"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Rabin Karp"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n + m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"n ","*"," m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"m"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))))),Object(b.b)("p",null,"*"," Where n = length of the source; m = length of the query pattern; k = size of the\nAlphabet"),Object(b.b)("h2",{id:"references"},"References"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.geeksforgeeks.org/rabin-karp-algorithm-for-pattern-searching/"}),"Geeksforgeeks")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Rabin%E2%80%93Karp_algorithm"}),"Wikipedia")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.youtube.com/watch?v=oxd_Z1osgCk&ab_channel=GeeksforGeeks"}),"YouTube"))))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Algorithms/Pattern/RabinKarp.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-algorithms-pattern-rabin-karp-mdx-6ec04b4e94777f707ace.js.map