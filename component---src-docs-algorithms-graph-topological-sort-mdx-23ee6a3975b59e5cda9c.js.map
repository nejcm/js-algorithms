{"version":3,"sources":["webpack:///../src/docs/Algorithms/Graph/TopologicalSort.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","alt","src","parentName","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,+NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,oBADR,oBAGA,qvBAUA,qBAAG,mBAAKC,IAAI,oBAAoBC,IAAI,sFACpC,gFACA,sBACE,kBAAIC,WAAW,MAAK,0BAAYA,WAAW,MAAvB,4BAApB,0CACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,4BAApB,+CACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,4BAApB,yBACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,4BAApB,8CACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,4BAApB,8CACA,kBAAIA,WAAW,MAAK,0BAAYA,WAAW,MAAvB,4BAApB,iBAEF,iBAAQ,CACN,GAAM,cADR,cAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,aAKjB,+EACA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uDADQ,kBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,sDADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,sFADQ,uB,6NAQ1BN,EAAWO,gBAAiB","file":"component---src-docs-algorithms-graph-topological-sort-mdx-23ee6a3975b59e5cda9c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/nejcm/js-algorithms/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"topological-sort\"\n    }}>{`Topological sort`}</h1>\n    <p>{`Or topological ordering of a directed graph is a linear ordering of its vertices\nsuch that for every directed edge uv from vertex u to vertex v, u comes before v\nin the ordering. For instance, the vertices of the graph may represent tasks to\nbe performed, and the edges may represent constraints that one task must be\nperformed before another; in this application, a topological ordering is just a\nvalid sequence for the tasks. A topological ordering is possible if and only if\nthe graph has no directed cycles, that is, if it is a directed acyclic graph\n(DAG). Any DAG has at least one topological ordering, and algorithms are known\nfor constructing a topological ordering of any DAG in linear time. `}{`[Source:\nWikipedia]`}</p>\n    <p><img alt=\"Topologic sorting\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/03/Directed_acyclic_graph_2.svg\" /></p>\n    <p>{`The graph shown above has many valid topological sorts:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`5, 7, 3, 11, 8, 2, 9, 10`}</inlineCode>{` (visual left-to-right, top-to-bottom)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`3, 5, 7, 8, 11, 2, 9, 10`}</inlineCode>{` (smallest-numbered available vertex first)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`5, 7, 3, 8, 11, 10, 9, 2`}</inlineCode>{` (fewest edges first)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`7, 5, 11, 3, 10, 8, 9, 2`}</inlineCode>{` (largest-numbered available vertex first)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`5, 7, 11, 2, 3, 8, 9, 10`}</inlineCode>{` (attempting top-to-bottom, left-to-right)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`3, 7, 8, 5, 11, 10, 2, 9`}</inlineCode>{` (arbitrary)`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"complexity\"\n    }}>{`Complexity`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Time`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Topological sort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`v + e`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`*`}{` Where v = number of vertices; e = number of edges`}</p>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/topological-sorting/\"\n        }}>{`Geeksforgeeks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Topological_sorting\"\n        }}>{`Wikipedia`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.hackerearth.com/practice/algorithms/graphs/topological-sort/tutorial/\"\n        }}>{`Hackerearth`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}