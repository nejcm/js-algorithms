{"version":3,"sources":["webpack:///../src/docs/Algorithms/Sorting/RadixSort.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,2NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAGA,weAMA,oCACA,sBACE,kBAAIC,WAAW,MAAf,oFAEA,kBAAIA,WAAW,MAAf,4FAGF,uCACA,sBACE,kBAAIA,WAAW,MAAf,0KAGA,kBAAIA,WAAW,MAAf,gFACA,kBAAIA,WAAW,MAAf,wEAEF,8CACA,qBAAG,mBAAKC,IAAI,aAAaC,IAAI,4LAC7B,iBAAQ,CACN,GAAM,cADR,cAGA,uBAAK,sBAAMF,WAAW,OAAU,CAC5B,UAAa,kBADZ,6pBAoBL,iBAAQ,CACN,GAAM,cADR,cAGA,yBACE,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,eAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,eAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,eAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,OAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,gCAMN,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8CADQ,kBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6CADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,yEADQ,YAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6CADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,iFADQ,uB,yNAQ1BJ,EAAWO,gBAAiB","file":"component---src-docs-algorithms-sorting-radix-sort-mdx-0ea37fb62a67914e96a0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/nejcm/js-algorithms/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"radix-sort\"\n    }}>{`Radix Sort`}</h1>\n    <p>{`In computer science, radix sort is a non-comparative sorting algorithm. It\navoids comparison by creating and distributing elements into buckets according\nto their radix. For elements with more than one significant digit, this\nbucketing process is repeated for each digit, while preserving the ordering of\nthe prior step, until all digits have been considered. For this reason, radix\nsort has also been called bucket sort and digital sort. (Source: Wikipedia)`}</p>\n    <p>{`Advantages:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Fast when the keys are short i.e. when the range of the array elements is\nless.`}</li>\n      <li parentName=\"ul\">{`Used in suffix array constuction algorithms like Manber's algorithm and DC3\nalgorithm.`}</li>\n    </ul>\n    <p>{`Disadvantages:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Since Radix Sort depends on digits or letters, Radix Sort is much less\nflexible than other sorts. Hence , for every different type of data it needs\nto be rewritten.`}</li>\n      <li parentName=\"ul\">{`The constant for Radix sort is greater compared to other sorting algorithms.`}</li>\n      <li parentName=\"ul\">{`It takes more space compared to Quicksort which is inplace sorting.`}</li>\n    </ul>\n    <p>{`(Source: Hackerearth)`}</p>\n    <p><img alt=\"Radix Sort\" src=\"https://www.researchgate.net/publication/291086231/figure/fig1/AS:614214452404240@1523451545568/Simplistic-illustration-of-the-steps-performed-in-a-radix-sort-In-this-example-the.png\" /></p>\n    <h2 {...{\n      \"id\": \"pseudocode\"\n    }}>{`Pseudocode`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`radixSort(array)\n  d <- maximum number of digits in the largest element\n  create d buckets of size 0-9\n  for i <- 0 to d\n    sort the elements according to ith place digits using countingSort\n\ncountingSort(array, d)\n  max <- find largest element among dth place elements\n  initialize count array with all zeros\n  for j <- 0 to size\n    find the total count of each unique digit in dth place of elements and\n    store the count at jth index in count array\n  for i <- 1 to max\n    find the cumulative sum and store it in count array itself\n  for j <- size down to 1\n    restore the elements to array\n    decrease count of each element restored by 1\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"complexity\"\n    }}>{`Complexity`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Best`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Average`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Worst`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Memory`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Stable`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Radix sort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n `}{`*`}{` k`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n `}{`*`}{` k`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n `}{`*`}{` k`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n + k`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`k - length of longest key`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/radix-sort/\"\n        }}>{`Geeksforgeeks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Radix_sort\"\n        }}>{`Wikipedia`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=nu4gDuFabIM&ab_channel=GeeksforGeeks\"\n        }}>{`YouTube`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.programiz.com/dsa/radix-sort\"\n        }}>{`Programiz`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.hackerearth.com/practice/algorithms/sorting/radix-sort/tutorial/\"\n        }}>{`Hackerearth`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}