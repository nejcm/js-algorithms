{"version":3,"sources":["webpack:///../src/docs/DataStructures/Queue.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","alt","src","parentName","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,mNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,SADR,SAGA,8fAMA,yVAIA,itBAQA,qXAIA,qBAAG,mBAAKC,IAAI,+BAA+BC,IAAI,uGAC/C,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIC,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,wDADQ,kBAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,6DADQ,cAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,gDADQ,YAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,gDADQ,YAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,wCADQ,cAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,2FADQ,gBAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,4EADQ,0B,iNAQ1BN,EAAWO,gBAAiB","file":"component---src-docs-data-structures-queue-mdx-72862e2913669ae2eb80.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/js-algorithms/js-algorithms/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"queue\"\n    }}>{`Queue`}</h1>\n    <p>{`Is a collection of entities that are maintained in a sequence and can be modified by the\naddition of entities at one end of the sequence and the removal of entities from the other\nend of the sequence. By convention, the end of the sequence at which elements are added is\ncalled the back, tail, or rear of the queue, and the end at which elements are removed is\ncalled the head or front of the queue, analogously to the words used when people line up\nto wait for goods or services.`}</p>\n    <p>{`The operation of adding an element to the rear of the queue is known as enqueue, and the\noperation of removing an element from the front is known as dequeue. Other operations may\nalso be allowed, often including a peek or front operation that returns the value of the\nnext element to be dequeued without dequeuing it.`}</p>\n    <p>{`The operations of a queue make it a first-in-first-out (FIFO) data structure. In a FIFO\ndata structure, the first element added to the queue will be the first one to be removed.\nThis is equivalent to the requirement that once a new element is added, all elements that\nwere added before have to be removed before the new element can be removed. A queue is an\nexample of a linear data structure, or more abstractly a sequential collection. Queues are\ncommon in computer programs, where they are implemented as data structures coupled with\naccess routines, as an abstract data structure or in object-oriented languages as classes.\nCommon implementations are circular buffers and linked lists.`}</p>\n    <p>{`Queues provide services in computer science, transport, and operations research where\nvarious entities such as data, objects, persons, or events are stored and held to be\nprocessed later. In these contexts, the queue performs the function of a buffer. Another\nusage of queues is in the implementation of breadth-first search. (Source: Wikipedia)`}</p>\n    <p><img alt=\"Data Structure Visualization\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/52/Data_Queue.svg/600px-Data_Queue.svg.png\" /></p>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/queue-data-structure/\"\n        }}>{`Geeksforgeeks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Queue_(abstract_data_type)\"\n        }}>{`Wikipedia`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=wjI1WNcIntg\"\n        }}>{`YouTube`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=okr-XE8yTO8\"\n        }}>{`YouTube`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.programiz.com/dsa/queue\"\n        }}>{`Programiz`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.hackerearth.com/practice/data-structures/queues/basics-of-queues/tutorial/\"\n        }}>{`Hackerearth`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/data_structures_algorithms/dsa_queue.htm\"\n        }}>{`Tutorialspoint`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}