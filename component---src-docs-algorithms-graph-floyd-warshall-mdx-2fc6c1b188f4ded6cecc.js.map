{"version":3,"sources":["webpack:///../src/docs/Algorithms/Graph/FloydWarshall.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","alt","src","parentName","isMDXComponent"],"mappings":"wPAMaA,G,UAAe,S,6NAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kBADR,kBAGA,gyBASA,qBAAG,mBAAKC,IAAI,iBAAiBC,IAAI,gIACjC,iBAAQ,CACN,GAAM,cADR,cAGA,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,SADX,QAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,WADX,aAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,WADX,SAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,SADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,8BAAIA,WAAW,MAAS,CACtB,MAAS,SADX,kBAGA,8BAAIA,WAAW,MAAS,CACtB,MAAS,WADX,IAEQ,6BACR,8BAAIA,WAAW,MAAS,CACtB,MAAS,WADX,IAEQ,6BACR,8BAAIA,WAAW,MAAS,CACtB,MAAS,aAKjB,+EACA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,kEADQ,kBAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,mEADQ,cAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,qEADQ,YAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,2DADQ,cAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,+EADQ,yB,2NAQ1BN,EAAWO,gBAAiB","file":"component---src-docs-algorithms-graph-floyd-warshall-mdx-2fc6c1b188f4ded6cecc.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/js-algorithms/js-algorithms/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"floyd-warshall\"\n    }}>{`Floyd warshall`}</h1>\n    <p>{`Floyd–Warshall algorithm (also known as Floyd's algorithm, the Roy–Warshall algorithm, the\nRoy–Floyd algorithm, or the WFI algorithm) is an algorithm for finding shortest paths in a\nweighted graph with positive or negative edge weights (but with no negative cycles). A\nsingle execution of the algorithm will find the lengths (summed weights) of shortest paths\nbetween all pairs of vertices. Although it does not return details of the paths\nthemselves, it is possible to reconstruct the paths with simple modifications to the\nalgorithm. Versions of the algorithm can also be used for finding the transitive closure\nof a relation R, or (in connection with the Schulze voting system) widest paths between\nall pairs of vertices in a weighted graph. `}{`[Source: Wikipedia]`}</p>\n    <p><img alt=\"Floyd warshall\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Floyd-Warshall_example.svg/2880px-Floyd-Warshall_example.svg.png\" /></p>\n    <h2 {...{\n      \"id\": \"complexity\"\n    }}>{`Complexity`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Best time`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Space`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Floyd warshall`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`v`}<sup>{`3`}</sup></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`v`}<sup>{`2`}</sup></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`*`}{` Where v = number of vertices; e = number of edges`}</p>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/floyd-warshall-algorithm-dp-16/\"\n        }}>{`Geeksforgeeks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Floyd%E2%80%93Warshall_algorithm\"\n        }}>{`Wikipedia`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=oNI0rf2P9gE&ab_channel=AbdulBari\"\n        }}>{`YouTube`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.programiz.com/dsa/floyd-warshall-algorithm\"\n        }}>{`Programiz`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://cp-algorithms.com/graph/all-pair-shortest-path-floyd-warshall.html\"\n        }}>{`cp-algorithms`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}