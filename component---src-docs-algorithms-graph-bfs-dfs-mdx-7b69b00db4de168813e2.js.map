{"version":3,"sources":["webpack:///../src/docs/Algorithms/Graph/BFS&DFS.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"kfAMO,IAAMA,EAAe,Q,uNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,YADR,aAGA,iBAAQ,CACN,GAAM,wBADR,wBAGA,2WAKA,mRAIA,iBAAQ,CACN,GAAM,sBADR,sBAGA,kOAGA,6MAGA,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,kEADQ,kBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gDADQ,aAItB,iBAAQ,CACN,GAAM,OADR,OAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,2EADQ,kBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uDADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,0FADQ,gBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,0FADQ,oBAItB,iBAAQ,CACN,GAAM,OADR,OAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,yEADQ,kBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,qDADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wFADQ,gBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wFADQ,0B,qNAQ1BJ,EAAWK,gBAAiB","file":"component---src-docs-algorithms-graph-bfs-dfs-mdx-7b69b00db4de168813e2.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/nejcm/js-algorithms/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"bfs--dfs\"\n    }}>{`BFS & DFS`}</h1>\n    <h2 {...{\n      \"id\": \"breadth-first-search\"\n    }}>{`Breadth first search`}</h2>\n    <p>{`BFS (level order traversal) is a vertex based technique for finding a shortest\npath in graph. It uses a Queue data structure which follows first in first out.\nIn BFS, one vertex is selected at a time when it is visited and marked then its\nadjacent are visited and stored in the queue. It is slower than DFS. `}{`[Source:\nGeeksforgeeks]`}</p>\n    <p>{`It starts traversing from a selected node (source or starting node) and traverse\nthe graph layerwise thus exploring the neighbour nodes (nodes which are directly\nconnected to source node). You must then move towards the next-level neighbour\nnodes.`}</p>\n    <h2 {...{\n      \"id\": \"depth-first-search\"\n    }}>{`Depth first search`}</h2>\n    <p>{`DFS is a edge based technique. It uses the Stack data structure, performs two\nstages, first visited vertices are pushed into stack and second if there is no\nvertices then visited vertices are popped.`}</p>\n    <p>{`The DFS algorithm is a recursive algorithm that uses the idea of backtracking.\nIt involves exhaustive searches of all the nodes by going ahead, if possible,\nelse by backtracking.`}</p>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/difference-between-bfs-and-dfs/\"\n        }}>{`Geeksforgeeks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=pcKY4hjDrxk\"\n        }}>{`YouTube`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"bfs\"\n    }}>{`BFS`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/breadth-first-search-or-bfs-for-a-graph/\"\n        }}>{`Geeksforgeeks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Breadth-first_search\"\n        }}>{`Wikipedia`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.hackerearth.com/practice/algorithms/graphs/breadth-first-search/tutorial/\"\n        }}>{`Hackerearth`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/data_structures_algorithms/breadth_first_traversal.htm\"\n        }}>{`Tutorialspoint`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"dfs\"\n    }}>{`DFS`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/depth-first-search-or-dfs-for-a-graph/\"\n        }}>{`Geeksforgeeks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Depth-first_search\"\n        }}>{`Wikipedia`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.hackerearth.com/practice/algorithms/graphs/depth-first-search/tutorial/\"\n        }}>{`Hackerearth`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/data_structures_algorithms/depth_first_traversal.htm\"\n        }}>{`Tutorialspoint`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}