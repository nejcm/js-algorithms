{"version":3,"sources":["webpack:///../src/docs/Algorithms/Sorting/QuickSort.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","alt","src","parentName","isMDXComponent"],"mappings":"qfAMO,IAAMA,EAAe,Q,2NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAGA,uOAGA,wYAKA,iTAIA,mHAEA,qBAAG,mBAAKC,IAAI,YAAYC,IAAI,oFAC5B,iBAAQ,CACN,GAAM,cADR,cAGA,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,IAEQ,6BACR,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,MAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,oEAMN,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8CADQ,kBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,4CADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gDADQ,YAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6CADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wEADQ,eAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,iFADQ,gBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uFADQ,0B,yNAQ1BN,EAAWO,gBAAiB","file":"component---src-docs-algorithms-sorting-quick-sort-mdx-d5bcebf470a6e54fb76a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/nejcm/js-algorithms/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"quick-sort\"\n    }}>{`Quick Sort`}</h1>\n    <p>{`Quicksort (sometimes called partition-exchange sort) is an efficient sorting\nalgorithm. When implemented well, it can be about two or three times faster than\nits main competitors, merge sort and heapsort.`}</p>\n    <p>{`Quicksort is a divide-and-conquer algorithm. It works by selecting a 'pivot'\nelement from the array and partitioning the other elements into two sub-arrays,\naccording to whether they are less than or greater than the pivot. The\nsub-arrays are then sorted recursively. This can be done in-place, requiring\nsmall additional amounts of memory to perform the sorting.`}</p>\n    <p>{`Quicksort is a comparison sort, meaning that it can sort items of any type for\nwhich a \"less-than\" relation (formally, a total order) is defined. Efficient\nimplementations of Quicksort are not a stable sort, meaning that the relative\norder of equal sort items is not preserved.`}</p>\n    <p>{`Animated visualization of the quicksort algorithm. The horizontal lines are\npivot values.`}</p>\n    <p><img alt=\"Quicksort\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/6a/Sorting_quicksort_anim.gif\" /></p>\n    <h2 {...{\n      \"id\": \"complexity\"\n    }}>{`Complexity`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Best`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Average`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Worst`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Memory`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Stable`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Quick sort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n`}{`*`}{`log(n)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n`}{`*`}{`log(n)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n`}<sup>{`2`}</sup></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`log(n)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`No`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Quicksort is usually done in-place with O(log(n)) stack space`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/quick-sort/\"\n        }}>{`Geeksforgeeks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Quicksort\"\n        }}>{`Wikipedia`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=SLauY6PpjW4\"\n        }}>{`YouTube`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.programiz.com/dsa/quick-sort\"\n        }}>{`Programiz`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.algomation.com/player?algorithm=58bb2ef75b2b830400b05118\"\n        }}>{`Algomation`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.hackerearth.com/practice/algorithms/sorting/quick-sort/tutorial/\"\n        }}>{`Hackerearth`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/data_structures_algorithms/quick_sort_algorithm.htm\"\n        }}>{`Tutorialspoint`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}