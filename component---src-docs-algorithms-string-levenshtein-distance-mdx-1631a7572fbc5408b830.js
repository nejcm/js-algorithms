(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{N4cR:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return b}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var i=n("/FXl"),r=n("TjRS");n("aD51");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Algorithms/String/LevenshteinDistance.mdx"}});var o={_frontmatter:c},s=r.a;function b(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(i.b)(s,a({},o,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"levenshtein-distance"},"Levenshtein distance"),Object(i.b)("p",null,"n information theory, linguistics and computer science, the Levenshtein distance\nis a string metric for measuring the difference between two sequences.\nInformally, the Levenshtein distance between two words is the minimum number of\nsingle-character edits (insertions, deletions or substitutions) required to\nchange one word into the other. (Source: Wikipedia)"),Object(i.b)("p",null,Object(i.b)("img",{alt:"Levenshtein",src:"https://wikimedia.org/api/rest_v1/media/math/render/svg/4cf357d8f2135035207088d2c7b890fb4b64e410"})),Object(i.b)("h2",{id:"references"},"References"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",a({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Levenshtein_distance"}),"Wikipedia")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",a({parentName:"li"},{href:"https://www.youtube.com/watch?v=MiqoA-yF-0M&ab_channel=BackToBackSWE"}),"YouTube"))))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Algorithms/String/LevenshteinDistance.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-algorithms-string-levenshtein-distance-mdx-1631a7572fbc5408b830.js.map