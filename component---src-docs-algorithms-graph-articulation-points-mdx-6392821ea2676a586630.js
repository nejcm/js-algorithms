(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{Tqb5:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return o})),a.d(t,"default",(function(){return s}));var n=a("Fcif"),r=a("+I+c"),i=(a("mXGw"),a("/FXl")),c=a("TjRS"),o=(a("aD51"),{});void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Algorithms/Graph/ArticulationPoints.mdx"}});var b={_frontmatter:o},l=c.a;function s(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)(l,Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"articulation-points"},"Articulation points"),Object(i.b)("p",null,"A vertex in an undirected connected graph is an articulation point (or cut vertex) if\nremoving it (and edges through it) disconnects the graph. Articulation points represent\nvulnerabilities in a connected network â€“ single points whose failure would split the\nnetwork into 2 or more components. They are useful for designing reliable networks. For a\ndisconnected undirected graph, an articulation point is a vertex removing which increases\nnumber of connected components. ","[Source: Geeksforgeeks]"),Object(i.b)("h2",{id:"complexity"},"Complexity"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"Best time"),Object(i.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Comments"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Articulation points"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"v + e"),Object(i.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Based on the algorithm used.")))),Object(i.b)("p",null,"*"," Where v = number of vertices; e = number of edges"),Object(i.b)("h2",{id:"references"},"References"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.geeksforgeeks.org/articulation-points-or-cut-vertices-in-a-graph/"}),"Geeksforgeeks")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Biconnected_component"}),"Wikipedia")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.youtube.com/watch?v=jFZsDDB0-vo&ab_channel=AbdulBari"}),"YouTube")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://www.hackerearth.com/practice/algorithms/graphs/articulation-points-and-bridges/tutorial/"}),"Hackerearth")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"https://cp-algorithms.com/graph/cutpoints.html"}),"cp-algorithms"))))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Algorithms/Graph/ArticulationPoints.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-algorithms-graph-articulation-points-mdx-6392821ea2676a586630.js.map