(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{LfDN:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return l}));var r=a("Fcif"),i=a("+I+c"),n=(a("mXGw"),a("/FXl")),b=a("TjRS"),c=(a("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Algorithms/Graph/Bridges.mdx"}});var o={_frontmatter:c},s=b.a;function l(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(n.b)(s,Object(r.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"bridges"},"Bridges"),Object(n.b)("p",null,"In graph theory, a bridge, isthmus, cut-edge, or cut arc is an edge of a graph whose\ndeletion increases its number of connected components. Equivalently, an edge is a bridge\nif and only if it is not contained in any cycle. For a connected graph, a bridge can\nuniquely determine a cut. A graph is said to be bridgeless or isthmus-free if it contains\nno bridges."),Object(n.b)("p",null,'Another meaning of "bridge" appears in the term bridge of a subgraph. If H is a subgraph\nof G, a bridge of H in G is a maximal subgraph of G that is not contained in H and is not\nseparated by H. ',"[Source: Wikipedia]"),Object(n.b)("p",null,Object(n.b)("img",{alt:"Bridges in graph",src:"https://upload.wikimedia.org/wikipedia/commons/d/df/Graph_cut_edges.svg"})),Object(n.b)("p",null,"A graph with 16 vertices and 6 bridges (highlighted in red)."),Object(n.b)("h2",{id:"complexity"},"Complexity"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"Name"),Object(n.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Best time"),Object(n.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"Comments"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"Bridges"),Object(n.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"v + e"),Object(n.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}),"Based on the algorithm used.")))),Object(n.b)("p",null,"*"," Where v = number of vertices; e = number of edges"),Object(n.b)("h2",{id:"references"},"References"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.geeksforgeeks.org/bridge-in-a-graph/"}),"Geeksforgeeks")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Bridge_(graph_theory)"}),"Wikipedia")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.youtube.com/watch?v=thLQYBlz2DM&ab_channel=GeeksforGeeks"}),"YouTube")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.hackerearth.com/practice/algorithms/graphs/articulation-points-and-bridges/tutorial/"}),"Hackerearth")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://cp-algorithms.com/graph/bridge-searching.html"}),"cp-algorithms")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.tutorialspoint.com/Bridges-in-a-Graph"}),"Tutorialspoint"))))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Algorithms/Graph/Bridges.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-algorithms-graph-bridges-mdx-34ad45f886dc17db1983.js.map