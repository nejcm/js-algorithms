{"version":3,"sources":["webpack:///../src/docs/DataStructures/Graph.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","alt","src","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,mNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,SADR,SAGA,iLAEA,4fAOA,sMAGA,qBAAG,mBAAKC,IAAI,+BAA+BC,IAAI,0EAC/C,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uEADQ,kBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6DADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gDADQ,YAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wCADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uFADQ,0B,iNAQ1BN,EAAWO,gBAAiB","file":"component---src-docs-data-structures-graph-mdx-64e732232e49040d5422.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/nejcm/js-algorithms/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"graph\"\n    }}>{`Graph`}</h1>\n    <p>{`Is an abstract data type that is meant to implement the undirected graph and\ndirected graph concepts from the field of graph theory within mathematics.`}</p>\n    <p>{`A graph data structure consists of a finite (and possibly mutable) set of\nvertices (also called nodes or points), together with a set of unordered pairs\nof these vertices for an undirected graph or a set of ordered pairs for a\ndirected graph. These pairs are known as edges (also called links or lines), and\nfor a directed graph are also known as arrows. The vertices may be part of the\ngraph structure, or may be external entities represented by integer indices or\nreferences.`}</p>\n    <p>{`A graph data structure may also associate to each edge some edge value, such as\na symbolic label or a numeric attribute (cost, capacity, length, etc.). (Source:\nWikipedia)`}</p>\n    <p><img alt=\"Data Structure Visualization\" src=\"https://www.geeksforgeeks.org/wp-content/uploads/undirectedgraph.png\" /></p>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/graph-data-structure-and-algorithms/\"\n        }}>{`Geeksforgeeks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Graph_(abstract_data_type)\"\n        }}>{`Wikipedia`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=zaBhtODEL0w\"\n        }}>{`YouTube`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.programiz.com/dsa/graph\"\n        }}>{`Programiz`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/data_structures_algorithms/graph_data_structure.htm\"\n        }}>{`Tutorialspoint`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}