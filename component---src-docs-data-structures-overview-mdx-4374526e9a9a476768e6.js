(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{IDyR:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return o}));a("5hJT"),a("W1QL"),a("K/PF"),a("t91x"),a("75LO"),a("PJhk"),a("mXGw");var n=a("/FXl"),r=a("TjRS"),i=a("ZFoC");a("aD51");function b(){return(b=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/DataStructures/Overview.mdx"}});var s={_frontmatter:c},l=r.a;function o(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(n.b)(l,b({},s,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"data-structures"},"Data Structures"),Object(n.b)("p",null,"In computer science, a data structure is a data organization, management, and\nstorage format that enables efficient access and modification. More precisely, a\ndata structure is a collection of data values, the relationships among them, and\nthe functions or operations that can be applied to the data. (Source: Wikipedia)"),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"B")," - Beginner, ",Object(n.b)("inlineCode",{parentName:"p"},"A")," - Advanced"),Object(n.b)("p",null,"*"," Algorithms without the ",Object(n.b)("em",{parentName:"p"},"Code")," link are not implemented yet."),Object(n.b)("br",null),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(i.b,{to:"/data-structures/linked-list",mdxType:"Link"},"Linked list"),"\n[",Object(n.b)("a",b({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/linked-list/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(i.b,{to:"/data-structures/doubly-linked-list",mdxType:"Link"},"Doubly linked list"),"\n[",Object(n.b)("a",b({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/doubly-linked-list/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(i.b,{to:"/data-structures/stack",mdxType:"Link"},"Stack"),"\n[",Object(n.b)("a",b({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/stack/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(i.b,{to:"/data-structures/queue",mdxType:"Link"},"Queue"),"\n[",Object(n.b)("a",b({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/queue/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(i.b,{to:"/data-structures/hash-table",mdxType:"Link"},"Hash table"),"\n[",Object(n.b)("a",b({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/hash-table/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(i.b,{to:"/data-structures/heap",mdxType:"Link"},"Heap"),"\n[",Object(n.b)("a",b({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/heap/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(i.b,{to:"/data-structures/priority-queue",mdxType:"Link"},"Priority queue"),"\n[",Object(n.b)("a",b({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/priority-queue/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," ",Object(n.b)(i.b,{to:"/data-structures/trie",mdxType:"Link"},"Trie")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," ",Object(n.b)(i.b,{to:"/data-structures/tree",mdxType:"Link"},"Tree")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," ",Object(n.b)(i.b,{to:"/data-structures/graph",mdxType:"Link"},"Graph")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," ",Object(n.b)(i.b,{to:"/data-structures/disjoint-set",mdxType:"Link"},"Disjoint Set")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," ",Object(n.b)(i.b,{to:"/data-structures/bloom-filter",mdxType:"Link"},"Bloom Filter"))))}void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/DataStructures/Overview.mdx"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-data-structures-overview-mdx-4374526e9a9a476768e6.js.map