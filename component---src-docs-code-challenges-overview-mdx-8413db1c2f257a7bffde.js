(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{o6cI:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return s}));var b=a("Fcif"),l=a("+I+c"),c=(a("mXGw"),a("/FXl")),r=a("TjRS"),i=(a("aD51"),{});void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/CodeChallenges/Overview.mdx"}});var n={_frontmatter:i},m=r.a;function s(e){var t=e.components,a=Object(l.a)(e,["components"]);return Object(c.b)(m,Object(b.a)({},n,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"other-programming-challenges"},"Other programming challenges"),Object(c.b)("p",null,"Other programming challenges and problems from ",Object(c.b)("strong",{parentName:"p"},"codesignal")," and ",Object(c.b)("strong",{parentName:"p"},"leetcode")," sorted by\nfirst letter/number (did not find a better way to sort/group them ðŸ˜Š)."),Object(c.b)("p",null,"Some have multiple solutions with different approaches."),Object(c.b)("p",null,Object(c.b)("inlineCode",{parentName:"p"},"B")," - Beginner, ",Object(c.b)("inlineCode",{parentName:"p"},"I")," - Intermediate, ",Object(c.b)("inlineCode",{parentName:"p"},"A")," - Advanced"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"a"}),"A"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/ada-number"})," absoluteValuesSumMinimization ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/absolute-values-sum-minimization"})," adaNumber ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/add-border"})," addBorder ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/add-two-digits"})," addTwoDigits ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/add-two-numbers-list"})," addTwoNumbersList ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/addition-without-carrying"})," additionWithoutCarrying ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/adjacent-elements-product"})," adjacentElementsProduct ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/all-longest-strings"})," allLongestStrings ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/almost-increasing-sequence"})," almostIncreasingSequence ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/alphabet-subsequence"})," alphabetSubsequence ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/alphabetic-shift"})," alphabeticShift ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/alphanumeric-less"})," alphanumericLess ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/alternating-sums"})," alternatingSums ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/apple-boxes"})," appleBoxes ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/are-equally-strong"})," areEquallyStrong ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/are-similar"})," areSimilar ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/arithmetic-expression"})," arithmeticExpression ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/array-change"})," arrayChange ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/array-conversion"})," arrayConversion ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/array-max-consecutive-sum"})," arrayMaxConsecutiveSum ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/array-maximal-adjacent-difference"})," arrayMaximalAdjacentDifference ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/array-packing"})," arrayPacking ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/array-previous-less"})," arrayPreviousLess ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/avoid-obstacles"})," avoidObstacles ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/A/array-replace"})," arrayReplace ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"b"}),"B"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/B/bishop-and-pawn"})," bishopAndPawn ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/B/box-blur"})," boxBlur ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/B/build-palindrome"})," buildPalindrome ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"c"}),"C"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/candies"})," candies ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/candles"})," candles ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/century-from-year"})," centuryFromYear ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/character-parity"})," characterParity ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/check-if-double-exists"})," checkIfDoubleExists ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/check-palindrome"})," checkPalindrome ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/chess-board-cell-color"})," chessBoardCellColor ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/chess-knight"})," chessKnight ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/cipher26"})," cipher26 ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/circle-of-numbers"})," circleOfNumbers ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/combs"})," combs ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/comfortable-numbers"})," comfortableNumbers ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/common-character-count"})," commonCharacterCount ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/concatenate-arrays"})," concatenateArrays ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/construct-square"})," constructSquare ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/contains-duplicate"})," containsDuplicate ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/copy-random-list"})," copyRandomList ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/count-black-cells"})," countBlackCells ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/count-rectangles"})," countRectangles ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/count-sum-of-two-representations2"})," countSumOfTwoRepresentations2 ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/create-anagram"})," createAnagram ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/C/crossword-formation"})," crosswordFormation ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"d"}),"D"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/D/decipher"})," decipher ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/D/delete-digit"})," deleteDigit ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/D/deposit-profit"})," depositProfit ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/D/di-string-match"})," diStringMatch ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/D/different-rightmost-bit"})," differentRightmostBit ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/D/different-squares"})," differentSquares ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/D/different-symbols-naive"})," differentSymbolsNaive ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/D/digit-degree"})," digitDegree ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/D/digits-product"})," digitsProduct ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/D/duplicate-zeros"})," duplicateZeros ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"e"}),"E"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/E/elections-winners"})," electionsWinners ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/E/equal-digit-sum"})," equalDigitSum ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/E/equal-pair-of-bits"})," equalPairOfBits ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/E/even-digits-only"})," evenDigitsOnly ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/E/even-number-digits"})," evenNumberDigits ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/E/extra-number"})," extraNumber ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/E/extract-each-kth"})," extractEachKth ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"f"}),"F"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/F/file-naming"})," fileNaming ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/F/find-disappeared-numbers"})," findDisappearedNumbers ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/F/find-email-domain"})," findEmailDomain ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/F/find-max-consecutive-ones"})," findMaxConsecutiveOnes ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/F/first-digit"})," firstDigit ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/F/first-duplicate"})," firstDuplicate ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/F/first-reverse-try"})," firstReverseTry ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/F/flatten-linked-list"})," flattenLinkedList ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"g"}),"G"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/G/growing-plant"})," growingPlant ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/G/get-intersection-node"})," getIntersectionNode "))))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"h"}),"H"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/H/has-cycle"})," hasCycle ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/H/higher-version"})," higherVersion ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/H/house-numbers-sum"})," houseNumbersSum ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/H/house-of-cats"})," houseOfCats ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/H/html-end-tag-by-start-tag"})," htmlEndTagByStartTag ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"i"}),"I"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/increase-number-roundness"})," increaseNumberRoundness ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/integer-to-string-of-fixed-width"})," integerToStringOfFixedWidth ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/inorder-traversal"})," inorderTraversal ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/invert-tree"})," invertTree ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-beautiful-string"})," isBeautifulString ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-case-insensitive-palindrome"})," isCaseInsensitivePalindrome ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-digit"})," isDigit ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-infinite-process"})," isInfiniteProcess ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-IP-v4-address"})," isIPV4Address ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-lucky"})," isLucky ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-MAC48-address"})," isMAC48Address ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-palindrome"})," isPalindrome ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-palindrome-linked-list"})," isPalindromeLinkedList ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-power"})," isPower ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-smooth"})," isSmooth ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-substitution-cipher"})," isSubstitutionCipher ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-sum-of-consecutive2"})," isSumOfConsecutive2 ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-tandem-repeat"})," isTandemRepeat ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/I/is-unstable-pair"})," isUnstablePair ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"j"}),"J")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"k"}),"K"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/K/kill-kth-bit"})," killKthBit ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/K/knapsack-light"})," knapsackLight ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"l"}),"L"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/L/largest-number"})," largestNumber ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"A"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/L/largest-rectangle-area"})," largestRectangleArea ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/L/late-ride"})," lateRide ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/L/least-factorial"})," leastFactorial ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/L/levelorder-traversal"})," levelorderTraversal ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/L/line-encoding"})," lineEncoding ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/L/line-up"})," lineUp ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/L/longest-digits-prefix"})," longestDigitsPrefix ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/L/longest-word"})," longestWord ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"m"}),"M"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/magic-well"})," magicalWell ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/make-array-consecutive2"})," makeArrayConsecutive2 ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/matrix-elements-sum"})," matrixElementsSum ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/max-multiple"})," maxMultiple ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/max-profit2"})," maxProfit2 ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/merge"})," merge ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/max-depth"})," maxDepth ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/merge-trees"})," mergeTrees ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/merge-two-lists"})," mergeTwoLists ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/message-from-binary-code"})," messageFromBinaryCode ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/metro-card"})," metroCard ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/mine-sweeper"})," mineSweeper ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/minimal-number-of-coins"})," minimalNumberOfCoins ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/mirror-bits"})," mirrorBits ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/most-frequent-digit-sum"})," mostFrequentDigitSum ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/M/move-zeros"})," moveZeros ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"n"}),"N"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/N/new-numeral-system"})," newNumeralSystem ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/N/num-decodings"})," numDecodings ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/N/num-islands"})," numIslands ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/N/number-of-clans"})," numberOfClans ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/N/numbers-grouping"})," numbersGrouping ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"o"}),"O"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/O/odd-even-list"})," oddEvenList ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"p"}),"P"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/P/pages-numbering-with-ink"})," pagesNumberingWithInk ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/P/pair-of-shoes"})," pairOfShoes ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/P/palindrome-rearranging"})," palindromeRearranging ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/P/pascals-triangle"})," pascalsTriangle ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/P/phone-call"})," phoneCall ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/P/postorder"})," postorder ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/P/postorder-traversal"})," postorderTraversal ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/P/preorder"})," preorder ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/P/preorder-traversal"})," preorderTraversal ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/P/proper-noun-correction"})," properNounCorrection ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"q"}),"Q")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"r"}),"R"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/range-bit-count"})," rangeBitCount ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/range-bit-count"})," rangeBitCount copy ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/reach-next-level"})," reachNextLevel ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/rectangle-rotation"})," rectangleRotation ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/reflect-string"})," reflectString ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/remove-array-part"})," removeArrayPart ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/remove-duplicates"})," removeDuplicates ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/remove-elements"})," removeElements ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/remove-nth-from-end-of-list"})," removeNthFromEndOfOList ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/remove-three-duplicates"})," removeThreeDuplicates ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/replace-elements"})," replaceElements ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/replace-middle"})," replaceMiddle ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/replace-sequence"})," replaceSequence ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/reverse"})," reverse ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/reverse-in-parentheses"})," reverseInParentheses ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/reverse-list"})," reverseList ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/rotate-array"})," rotateArray ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/rotate-list"})," rotateList ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/R/rounders"})," rounders ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"s"}),"S"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/seats-in-theater"})," seatsInTheater ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/second-rightmost-zero-bit"})," secondRightmostZeroBit ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/shape-area"})," shapeArea ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/single-number"})," singleNumber ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/sort-array-by-parity"})," sortArrayByParity ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/sort-by-height"})," sortByHeight ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/sorted-squares"})," sortedSquares ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/spiral-numbers"})," spiralNumbers ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/square-digits-sequence"})," squareDigitsSequence ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/stolen-lunch"})," stolenLunch ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/strings-construction"})," stringsConstruction ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/strings-rearrangement"})," stringsRearrangement ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/sudoku"})," sudoku ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/sum-up-numbers"})," sumUpNumbers ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/swap-adjacent-bits"})," swapAdjacentBits ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/S/switch-lights"})," switchLights ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"t"}),"T"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/T/tennis-set"})," tennisSet ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/T/third-max"})," thirdMax ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/T/three-split"})," threeSplit ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"I"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/T/timed-reading"})," timedReading ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/T/two-sum"})," twoSum ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/T/two-sum-ordered"})," twoSumOrdered ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"u"}),"U")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"v"}),"V"),Object(c.b)("ul",{parentName:"li"},Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/V/valid-time"})," validTime ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/V/valid-mountain-array"})," validMountainArray ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/V/variable-name"})," variableName ")))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"w"}),"W"))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/W/weak-numbers"})," weakNumbers ")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"B"),Object(c.b)("a",Object(b.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/code-challenges/W/will-you"})," willYou "))),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"x"}),"X")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"y"}),"Y")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("h2",Object(b.a)({parentName:"li"},{id:"z"}),"Z"))))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/CodeChallenges/Overview.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-code-challenges-overview-mdx-8413db1c2f257a7bffde.js.map