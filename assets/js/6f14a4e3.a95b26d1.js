"use strict";(self.webpackChunk_nejcm_js_algorithms=self.webpackChunk_nejcm_js_algorithms||[]).push([[7339],{209:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>h,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Algorithms/Graph/AStar","title":"A\\\\*","description":"View the implementation","source":"@site/docs/Algorithms/Graph/AStar.mdx","sourceDirName":"Algorithms/Graph","slug":"/Algorithms/Graph/AStar","permalink":"/js-algorithms/docs/Algorithms/Graph/AStar","draft":false,"unlisted":false,"editUrl":"https://github.com/nejcm/js-algorithms/edit/main/docs/Algorithms/Graph/AStar.mdx","tags":[],"version":"current","frontMatter":{"name":"A*","route":"/algorithms/graph/a-star","menu":"Graph"},"sidebar":"tutorialSidebar","previous":{"title":"Knapsack problem","permalink":"/js-algorithms/docs/Algorithms/Other/KnapsackProblem"},"next":{"title":"Articulation Points","permalink":"/js-algorithms/docs/Algorithms/Graph/ArticulationPoints"}}');var i=r(4848),n=r(8453);const a={name:"A*",route:"/algorithms/graph/a-star",menu:"Graph"},l="A*",h={},o=[{value:"Complexity",id:"complexity",level:2},{value:"References",id:"references",level:2}];function c(e){const t={a:"a",br:"br",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"a",children:"A*"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/algorithms/graph/a-star-search-algorithm",children:"View the implementation"})}),"\n",(0,i.jsx)(t.p,{children:"Is a graph traversal and path search algorithm, which is often used in many fields of\ncomputer science due to its completeness, optimality, and optimal efficiency. One major\npractical drawback is its O(b^d) space complexity, as it stores all generated nodes in\nmemory. Thus, in practical travel-routing systems, it is generally outperformed by\nalgorithms which can pre-process the graph to attain better performance, as well as\nmemory-bounded approaches; however, A* is still the best solution in many cases. A*\nachieves better performance by using heuristics to guide its search. [Source: Wikipedia]"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://upload.wikimedia.org/wikipedia/commons/9/98/AstarExampleEn.gif",alt:"A star"})}),"\n",(0,i.jsx)(t.h2,{id:"complexity",children:"Complexity"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Best time"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Space"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Comments"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"A*"}),(0,i.jsxs)(t.td,{style:{textAlign:"center"},children:["b",(0,i.jsx)("sup",{children:"d"})]}),(0,i.jsxs)(t.td,{style:{textAlign:"center"},children:["b",(0,i.jsx)("sup",{children:"d"})]}),(0,i.jsx)(t.td,{style:{textAlign:"left"}})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"A*"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"v + e"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"v + e"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Same as above"})]})]})]}),"\n",(0,i.jsxs)(t.p,{children:["* Where v = number of visited vertices; e = number of visited edges",(0,i.jsx)(t.br,{}),"\n","* Where b = branching factor of the tree/graph, d = depth of the goal node."]}),"\n",(0,i.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.geeksforgeeks.org/a-search-algorithm/",children:"Geeksforgeeks"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/A*_search_algorithm",children:"Wikipedia"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.youtube.com/watch?v=vP5TkF0xJgI&ab_channel=GeeksforGeeks",children:"YouTube"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>l});var s=r(6540);const i={},n=s.createContext(i);function a(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);