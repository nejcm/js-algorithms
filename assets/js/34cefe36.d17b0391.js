"use strict";(self.webpackChunk_nejcm_js_algorithms=self.webpackChunk_nejcm_js_algorithms||[]).push([[254],{3537:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>h});const l=JSON.parse('{"id":"Algorithms/Graph/TravellingSalesman","title":"Travelling Salesman Problem","description":"View the implementation","source":"@site/docs/Algorithms/Graph/TravellingSalesman.mdx","sourceDirName":"Algorithms/Graph","slug":"/Algorithms/Graph/TravellingSalesman","permalink":"/js-algorithms/docs/Algorithms/Graph/TravellingSalesman","draft":false,"unlisted":false,"editUrl":"https://github.com/nejcm/js-algorithms/edit/main/docs/Algorithms/Graph/TravellingSalesman.mdx","tags":[],"version":"current","frontMatter":{"name":"Travelling salesman problem","route":"/algorithms/graph/travelling-salesman problem","menu":"Graph"},"sidebar":"tutorialSidebar","previous":{"title":"Topological Sort","permalink":"/js-algorithms/docs/Algorithms/Graph/TopologicalSort"},"next":{"title":"Other programming challenges","permalink":"/js-algorithms/docs/CodeChallenges/Overview"}}');var r=n(4848),s=n(8453);const i={name:"Travelling salesman problem",route:"/algorithms/graph/travelling-salesman problem",menu:"Graph"},a="Travelling Salesman Problem",o={},h=[{value:"Complexity",id:"complexity",level:2},{value:"References",id:"references",level:2}];function c(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"travelling-salesman-problem",children:"Travelling Salesman Problem"})}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/algorithms/graph/travelling-salesman/index.ts",children:"View the implementation"})}),"\n",(0,r.jsx)(t.p,{children:'The travelling salesman problem (also called the travelling salesperson problem or TSP)\nasks the following question: "Given a list of cities and the distances between each pair\nof cities, what is the shortest possible route that visits each city and returns to the\norigin city?" It is an NP-hard problem in combinatorial optimization, important in\ntheoretical computer science and operations research.'}),"\n",(0,r.jsx)(t.p,{children:"The travelling purchaser problem and the vehicle routing problem are both generalizations\nof TSP."}),"\n",(0,r.jsx)(t.p,{children:"In the theory of computational complexity, the decision version of the TSP (where given a\nlength L, the task is to decide whether the graph has a tour of at most L) belongs to the\nclass of NP-complete problems. Thus, it is possible that the worst-case running time for\nany algorithm for the TSP increases superpolynomially (but no more than exponentially)\nwith the number of cities. [Source: Wikipedia]"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{src:"https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/GLPK_solution_of_a_travelling_salesman_problem.svg/1920px-GLPK_solution_of_a_travelling_salesman_problem.svg.png",alt:"Travelling Salesman"})}),"\n",(0,r.jsx)(t.h2,{id:"complexity",children:"Complexity"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Worst time"}),(0,r.jsx)(t.th,{style:{textAlign:"left"},children:"Comments"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Travelling salesman problem"}),(0,r.jsxs)(t.td,{style:{textAlign:"center"},children:["v",(0,r.jsx)("sup",{children:"2"})," * 2",(0,r.jsx)("sup",{children:"v"})]}),(0,r.jsx)(t.td,{style:{textAlign:"left"},children:"Based on the algorithm used."})]})})]}),"\n",(0,r.jsx)(t.p,{children:"* Where v = number of vertices; e = number of edges"}),"\n",(0,r.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.geeksforgeeks.org/travelling-salesman-problem-set-1/",children:"Geeksforgeeks"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.geeksforgeeks.org/travelling-salesman-problem-implementation-using-backtracking/?ref=rp",children:"Geeksforgeeks"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.geeksforgeeks.org/traveling-salesman-problem-using-branch-and-bound-2/",children:"Geeksforgeeks"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Travelling_salesman_problem",children:"Wikipedia"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.youtube.com/watch?v=XaXsJJh-Q5Y&ab_channel=AbdulBari",children:"YouTube"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"https://www.youtube.com/watch?v=1FEP_sNb62k&ab_channel=AbdulBari",children:"YouTube"})}),"\n"]})]})}function m(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var l=n(6540);const r={},s=l.createContext(r);function i(e){const t=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),l.createElement(s.Provider,{value:t},e.children)}}}]);