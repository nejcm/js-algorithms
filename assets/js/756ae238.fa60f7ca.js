"use strict";(self.webpackChunk_nejcm_js_algorithms=self.webpackChunk_nejcm_js_algorithms||[]).push([[5e3],{7704:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>h});const c=JSON.parse('{"id":"Algorithms/Graph/DetectCycle","title":"Detect Cycle","description":"View the implementation","source":"@site/docs/Algorithms/Graph/DetectCycle.mdx","sourceDirName":"Algorithms/Graph","slug":"/Algorithms/Graph/DetectCycle","permalink":"/js-algorithms/docs/Algorithms/Graph/DetectCycle","draft":false,"unlisted":false,"editUrl":"https://github.com/nejcm/js-algorithms/edit/main/docs/Algorithms/Graph/DetectCycle.mdx","tags":[],"version":"current","frontMatter":{"name":"Detect cycle","route":"/algorithms/graph/detect-cycle","menu":"Graph"},"sidebar":"tutorialSidebar","previous":{"title":"Bridges","permalink":"/js-algorithms/docs/Algorithms/Graph/Bridges"},"next":{"title":"Dijkstra Algorithm","permalink":"/js-algorithms/docs/Algorithms/Graph/Dijkstra"}}');var i=r(4848),n=r(8453);const s={name:"Detect cycle",route:"/algorithms/graph/detect-cycle",menu:"Graph"},a="Detect Cycle",l={},h=[{value:"References",id:"references",level:2}];function o(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"detect-cycle",children:"Detect Cycle"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/algorithms/graph/detect-cycle",children:"View the implementation"})}),"\n",(0,i.jsx)(t.p,{children:"In graph theory, a cycle in a graph is a non-empty trail in which the only repeated\nvertices are the first and last vertices. A directed cycle in a directed graph is a\nnon-empty directed trail in which the only repeated vertices are the first and last\nvertices."}),"\n",(0,i.jsx)(t.p,{children:"A graph without cycles is called an acyclic graph. A directed graph without directed\ncycles is called a directed acyclic graph. A connected graph without cycles is called a\ntree. [Source: Wikipedia]"}),"\n",(0,i.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.geeksforgeeks.org/detect-cycle-in-a-graph/",children:"Geeksforgeeks"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.geeksforgeeks.org/detect-cycle-undirected-graph/",children:"Geeksforgeeks"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Cycle_(graph_theory)",children:"Wikipedia"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://cp-algorithms.com/graph/finding-cycle.html",children:"cp-algorithms"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var c=r(6540);const i={},n=c.createContext(i);function s(e){const t=c.useContext(n);return c.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),c.createElement(n.Provider,{value:t},e.children)}}}]);