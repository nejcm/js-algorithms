"use strict";(self.webpackChunk_nejcm_js_algorithms=self.webpackChunk_nejcm_js_algorithms||[]).push([[9383],{6485:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>a,default:()=>o,frontMatter:()=>c,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"data-structures/overview","title":"Data Structures","description":"In computer science, a data structure is a data organization, management, and storage","source":"@site/docs/data-structures/overview.md","sourceDirName":"data-structures","slug":"/data-structures/overview","permalink":"/js-algorithms/docs/data-structures/overview","draft":false,"unlisted":false,"editUrl":"https://github.com/nejcm/js-algorithms/edit/main/docs/data-structures/overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/js-algorithms/docs/installation"},"next":{"title":"Doubly linked list","permalink":"/js-algorithms/docs/data-structures/doubly-linked-list"}}');var n=t(4848),i=t(8453);const c={sidebar_position:1},a="Data Structures",d={},l=[];function h(e){const s={a:"a",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"data-structures",children:"Data Structures"})}),"\n",(0,n.jsx)(s.p,{children:"In computer science, a data structure is a data organization, management, and storage\nformat that enables efficient access and modification. More precisely, a data structure is\na collection of data values, the relationships among them, and the functions or operations\nthat can be applied to the data. (Source: Wikipedia)"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://www.youtube.com/watch?v=RBSGKlAvoiM&ab_channel=freeCodeCamp.org",children:"YouTube"})}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.code,{children:"B"})," - Beginner, ",(0,n.jsx)(s.code,{children:"A"})," - Advanced"]}),"\n",(0,n.jsxs)(s.p,{children:["* Algorithms without the ",(0,n.jsx)(s.em,{children:"Code"})," link are not implemented yet."]}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"B"})," ",(0,n.jsx)(s.a,{href:"./doubly-linked-list",children:"Doubly linked list"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/doubly-linked-list/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"B"})," ",(0,n.jsx)(s.a,{href:"./hash-table",children:"Hash table"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/hash-table/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"B"})," ",(0,n.jsx)(s.a,{href:"./heap",children:"Heap"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/heap/index.ts",children:"Code"}),"]","\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"B"})," Min heap\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/heap/min.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"B"})," Max heap\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/heap/max.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," Fibonacci heap"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"B"})," ",(0,n.jsx)(s.a,{href:"./linked-list",children:"Linked list"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/linked-list/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"B"})," ",(0,n.jsx)(s.a,{href:"./priority-queue",children:"Priority queue"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/priority-queue/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"B"})," ",(0,n.jsx)(s.a,{href:"./queue",children:"Queue"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/queue/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"B"})," ",(0,n.jsx)(s.a,{href:"./stack",children:"Stack"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/stack/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," ",(0,n.jsx)(s.a,{href:"./tree",children:"Trees"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," AVL tree\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/tree/avl-tree/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," Binary search tree\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/tree/binary-search-tree/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," Fenwick tree\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/tree/fenwick-tree/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," Red-Black tree\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/tree/red-black-tree/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," Segment tree\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/tree/segment-tree/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," B-tree"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," Splay tree"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," ",(0,n.jsx)(s.a,{href:"./trie",children:"Trie"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/trie/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," ",(0,n.jsx)(s.a,{href:"./graph",children:"Graph"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/graph/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," ",(0,n.jsx)(s.a,{href:"./disjoint-set",children:"Disjoint Set"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/disjoint-set/index.ts",children:"Code"}),"]"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"A"})," ",(0,n.jsx)(s.a,{href:"./bloom-filter",children:"Bloom Filter"}),"\n[",(0,n.jsx)(s.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/bloom-filter/index.ts",children:"Code"}),"]"]}),"\n"]})]})}function o(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>c,x:()=>a});var r=t(6540);const n={},i=r.createContext(n);function c(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);