"use strict";(self.webpackChunk_nejcm_js_algorithms=self.webpackChunk_nejcm_js_algorithms||[]).push([[9259],{8032:t=>{t.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Introduction","items":[{"type":"link","label":"Introduction","href":"/js-algorithms/docs/intro","docId":"intro","unlisted":false},{"type":"link","label":"Big O Notation","href":"/js-algorithms/docs/big-o-notation","docId":"big-o-notation","unlisted":false},{"type":"link","label":"Installation","href":"/js-algorithms/docs/installation","docId":"installation","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Data Structures","items":[{"type":"link","label":"Data Structures","href":"/js-algorithms/docs/data-structures/overview","docId":"data-structures/overview","unlisted":false},{"type":"link","label":"Doubly linked list","href":"/js-algorithms/docs/data-structures/doubly-linked-list","docId":"data-structures/doubly-linked-list","unlisted":false},{"type":"link","label":"Hash table","href":"/js-algorithms/docs/data-structures/hash-table","docId":"data-structures/hash-table","unlisted":false},{"type":"link","label":"Heap","href":"/js-algorithms/docs/data-structures/heap","docId":"data-structures/heap","unlisted":false},{"type":"link","label":"Linked list","href":"/js-algorithms/docs/data-structures/linked-list","docId":"data-structures/linked-list","unlisted":false},{"type":"link","label":"Priority queue","href":"/js-algorithms/docs/data-structures/priority-queue","docId":"data-structures/priority-queue","unlisted":false},{"type":"link","label":"Queue","href":"/js-algorithms/docs/data-structures/queue","docId":"data-structures/queue","unlisted":false},{"type":"link","label":"Stack","href":"/js-algorithms/docs/data-structures/stack","docId":"data-structures/stack","unlisted":false},{"type":"link","label":"Tree","href":"/js-algorithms/docs/data-structures/tree","docId":"data-structures/tree","unlisted":false},{"type":"link","label":"Trie","href":"/js-algorithms/docs/data-structures/trie","docId":"data-structures/trie","unlisted":false},{"type":"link","label":"Graph","href":"/js-algorithms/docs/data-structures/graph","docId":"data-structures/graph","unlisted":false},{"type":"link","label":"Disjoint-set","href":"/js-algorithms/docs/data-structures/disjoint-set","docId":"data-structures/disjoint-set","unlisted":false},{"type":"link","label":"Bloom filter","href":"/js-algorithms/docs/data-structures/bloom-filter","docId":"data-structures/bloom-filter","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Algorithms","items":[{"type":"link","label":"Algorithms","href":"/js-algorithms/docs/Algorithms/Overview","docId":"Algorithms/Overview","unlisted":false},{"type":"category","label":"Math","items":[{"type":"link","label":"Combinations","href":"/js-algorithms/docs/Algorithms/Math/Combinations","docId":"Algorithms/Math/Combinations","unlisted":false},{"type":"link","label":"Factorial","href":"/js-algorithms/docs/Algorithms/Math/Factorial","docId":"Algorithms/Math/Factorial","unlisted":false},{"type":"link","label":"Permutations","href":"/js-algorithms/docs/Algorithms/Math/Permutations","docId":"Algorithms/Math/Permutations","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Pattern","items":[{"type":"link","label":"Boyer Moore","href":"/js-algorithms/docs/Algorithms/Pattern/BoyerMoore","docId":"Algorithms/Pattern/BoyerMoore","unlisted":false},{"type":"link","label":"Knuth Morris Pratt","href":"/js-algorithms/docs/Algorithms/Pattern/KnuthMorrisPratt","docId":"Algorithms/Pattern/KnuthMorrisPratt","unlisted":false},{"type":"link","label":"Naive algorithm","href":"/js-algorithms/docs/Algorithms/Pattern/Naive","docId":"Algorithms/Pattern/Naive","unlisted":false},{"type":"link","label":"Rabin Karp","href":"/js-algorithms/docs/Algorithms/Pattern/RabinKarp","docId":"Algorithms/Pattern/RabinKarp","unlisted":false},{"type":"link","label":"Z Algorithm","href":"/js-algorithms/docs/Algorithms/Pattern/ZAlgorithm","docId":"Algorithms/Pattern/ZAlgorithm","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Searching","items":[{"type":"link","label":"Binary search","href":"/js-algorithms/docs/Algorithms/Searching/BinarySearch","docId":"Algorithms/Searching/BinarySearch","unlisted":false},{"type":"link","label":"Interpolation Search","href":"/js-algorithms/docs/Algorithms/Searching/InterpolationSearch","docId":"Algorithms/Searching/InterpolationSearch","unlisted":false},{"type":"link","label":"Jump search","href":"/js-algorithms/docs/Algorithms/Searching/JumpSearch","docId":"Algorithms/Searching/JumpSearch","unlisted":false},{"type":"link","label":"Linear Search","href":"/js-algorithms/docs/Algorithms/Searching/LinearSearch","docId":"Algorithms/Searching/LinearSearch","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Sorting","items":[{"type":"link","label":"Bubble Sort","href":"/js-algorithms/docs/Algorithms/Sorting/BubbleSort","docId":"Algorithms/Sorting/BubbleSort","unlisted":false},{"type":"link","label":"Bucket Sort","href":"/js-algorithms/docs/Algorithms/Sorting/BucketSort","docId":"Algorithms/Sorting/BucketSort","unlisted":false},{"type":"link","label":"Counting Sort","href":"/js-algorithms/docs/Algorithms/Sorting/CountingSort","docId":"Algorithms/Sorting/CountingSort","unlisted":false},{"type":"link","label":"Heap Sort","href":"/js-algorithms/docs/Algorithms/Sorting/HeapSort","docId":"Algorithms/Sorting/HeapSort","unlisted":false},{"type":"link","label":"Insertion Sort","href":"/js-algorithms/docs/Algorithms/Sorting/InsertionSort","docId":"Algorithms/Sorting/InsertionSort","unlisted":false},{"type":"link","label":"Merge Sort","href":"/js-algorithms/docs/Algorithms/Sorting/MergeSort","docId":"Algorithms/Sorting/MergeSort","unlisted":false},{"type":"link","label":"Quick Sort","href":"/js-algorithms/docs/Algorithms/Sorting/QuickSort","docId":"Algorithms/Sorting/QuickSort","unlisted":false},{"type":"link","label":"Radix Sort","href":"/js-algorithms/docs/Algorithms/Sorting/RadixSort","docId":"Algorithms/Sorting/RadixSort","unlisted":false},{"type":"link","label":"Selection Sort","href":"/js-algorithms/docs/Algorithms/Sorting/SelectionSort","docId":"Algorithms/Sorting/SelectionSort","unlisted":false},{"type":"link","label":"Shell Sort","href":"/js-algorithms/docs/Algorithms/Sorting/ShellSort","docId":"Algorithms/Sorting/ShellSort","unlisted":false},{"type":"link","label":"Tim Sort","href":"/js-algorithms/docs/Algorithms/Sorting/TimSort","docId":"Algorithms/Sorting/TimSort","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"String","items":[{"type":"link","label":"Levenshtein distance","href":"/js-algorithms/docs/Algorithms/String/LevenshteinDistance","docId":"Algorithms/String/LevenshteinDistance","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tree","items":[{"type":"link","label":"BFS & DFS","href":"/js-algorithms/docs/Algorithms/Tree/BFS&DFS","docId":"Algorithms/Tree/BFS&DFS","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Other","items":[{"type":"link","label":"Knapsack problem","href":"/js-algorithms/docs/Algorithms/Other/KnapsackProblem","docId":"Algorithms/Other/KnapsackProblem","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"Graph","items":[{"type":"link","label":"A\\\\*","href":"/js-algorithms/docs/Algorithms/Graph/AStar","docId":"Algorithms/Graph/AStar","unlisted":false},{"type":"link","label":"Articulation Points","href":"/js-algorithms/docs/Algorithms/Graph/ArticulationPoints","docId":"Algorithms/Graph/ArticulationPoints","unlisted":false},{"type":"link","label":"BFS & DFS","href":"/js-algorithms/docs/Algorithms/Graph/BFS&DFS","docId":"Algorithms/Graph/BFS&DFS","unlisted":false},{"type":"link","label":"Bellman Ford","href":"/js-algorithms/docs/Algorithms/Graph/BellmanFord","docId":"Algorithms/Graph/BellmanFord","unlisted":false},{"type":"link","label":"Bridges","href":"/js-algorithms/docs/Algorithms/Graph/Bridges","docId":"Algorithms/Graph/Bridges","unlisted":false},{"type":"link","label":"Detect Cycle","href":"/js-algorithms/docs/Algorithms/Graph/DetectCycle","docId":"Algorithms/Graph/DetectCycle","unlisted":false},{"type":"link","label":"Dijkstra Algorithm","href":"/js-algorithms/docs/Algorithms/Graph/Dijkstra","docId":"Algorithms/Graph/Dijkstra","unlisted":false},{"type":"link","label":"Floyd-Warshall Algorithm","href":"/js-algorithms/docs/Algorithms/Graph/FloydWarshall","docId":"Algorithms/Graph/FloydWarshall","unlisted":false},{"type":"link","label":"Hamiltonian Cycle","href":"/js-algorithms/docs/Algorithms/Graph/HamiltonianCycle","docId":"Algorithms/Graph/HamiltonianCycle","unlisted":false},{"type":"link","label":"Kruskal\'s Algorithm","href":"/js-algorithms/docs/Algorithms/Graph/Kruskal","docId":"Algorithms/Graph/Kruskal","unlisted":false},{"type":"link","label":"Prim\'s Algorithm","href":"/js-algorithms/docs/Algorithms/Graph/Prim","docId":"Algorithms/Graph/Prim","unlisted":false},{"type":"link","label":"Strongly Connected Components","href":"/js-algorithms/docs/Algorithms/Graph/StronglyConnectedComponents","docId":"Algorithms/Graph/StronglyConnectedComponents","unlisted":false},{"type":"link","label":"Topological Sort","href":"/js-algorithms/docs/Algorithms/Graph/TopologicalSort","docId":"Algorithms/Graph/TopologicalSort","unlisted":false},{"type":"link","label":"Travelling Salesman Problem","href":"/js-algorithms/docs/Algorithms/Graph/TravellingSalesman","docId":"Algorithms/Graph/TravellingSalesman","unlisted":false}],"collapsed":true,"collapsible":true}],"collapsed":true,"collapsible":true},{"type":"category","label":"Code Challenges","items":[{"type":"link","label":"Other programming challenges","href":"/js-algorithms/docs/CodeChallenges/Overview","docId":"CodeChallenges/Overview","unlisted":false}],"collapsed":true,"collapsible":true}]},"docs":{"Algorithms/Graph/ArticulationPoints":{"id":"Algorithms/Graph/ArticulationPoints","title":"Articulation Points","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/AStar":{"id":"Algorithms/Graph/AStar","title":"A\\\\*","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/BellmanFord":{"id":"Algorithms/Graph/BellmanFord","title":"Bellman Ford","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/BFS&DFS":{"id":"Algorithms/Graph/BFS&DFS","title":"BFS & DFS","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/Bridges":{"id":"Algorithms/Graph/Bridges","title":"Bridges","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/DetectCycle":{"id":"Algorithms/Graph/DetectCycle","title":"Detect Cycle","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/Dijkstra":{"id":"Algorithms/Graph/Dijkstra","title":"Dijkstra Algorithm","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/FloydWarshall":{"id":"Algorithms/Graph/FloydWarshall","title":"Floyd-Warshall Algorithm","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/HamiltonianCycle":{"id":"Algorithms/Graph/HamiltonianCycle","title":"Hamiltonian Cycle","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/Kruskal":{"id":"Algorithms/Graph/Kruskal","title":"Kruskal\'s Algorithm","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/Prim":{"id":"Algorithms/Graph/Prim","title":"Prim\'s Algorithm","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/StronglyConnectedComponents":{"id":"Algorithms/Graph/StronglyConnectedComponents","title":"Strongly Connected Components","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/TopologicalSort":{"id":"Algorithms/Graph/TopologicalSort","title":"Topological Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Graph/TravellingSalesman":{"id":"Algorithms/Graph/TravellingSalesman","title":"Travelling Salesman Problem","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Math/Combinations":{"id":"Algorithms/Math/Combinations","title":"Combinations","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Math/Factorial":{"id":"Algorithms/Math/Factorial","title":"Factorial","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Math/Permutations":{"id":"Algorithms/Math/Permutations","title":"Permutations","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Other/KnapsackProblem":{"id":"Algorithms/Other/KnapsackProblem","title":"Knapsack problem","description":"The knapsack problem is a problem in combinatorial optimization: Given a set of items,","sidebar":"tutorialSidebar"},"Algorithms/Overview":{"id":"Algorithms/Overview","title":"Algorithms","description":"An algorithm is a finite sequence of well-defined, computer-implementable instructions,","sidebar":"tutorialSidebar"},"Algorithms/Pattern/BoyerMoore":{"id":"Algorithms/Pattern/BoyerMoore","title":"Boyer Moore","description":"Boyer\u2013Moore string-search algorithm is an efficient string-searching algorithm that is the","sidebar":"tutorialSidebar"},"Algorithms/Pattern/KnuthMorrisPratt":{"id":"Algorithms/Pattern/KnuthMorrisPratt","title":"Knuth Morris Pratt","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Pattern/Naive":{"id":"Algorithms/Pattern/Naive","title":"Naive algorithm","description":"The naive approach to the string matching problem is walking through the source starting","sidebar":"tutorialSidebar"},"Algorithms/Pattern/RabinKarp":{"id":"Algorithms/Pattern/RabinKarp","title":"Rabin Karp","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Pattern/ZAlgorithm":{"id":"Algorithms/Pattern/ZAlgorithm","title":"Z Algorithm","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Searching/BinarySearch":{"id":"Algorithms/Searching/BinarySearch","title":"Binary search","description":"Also known as half-interval search, logarithmic search, or binary chop, is a search","sidebar":"tutorialSidebar"},"Algorithms/Searching/InterpolationSearch":{"id":"Algorithms/Searching/InterpolationSearch","title":"Interpolation Search","description":"Interpolation search is an algorithm for searching for a key in an array that has been","sidebar":"tutorialSidebar"},"Algorithms/Searching/JumpSearch":{"id":"Algorithms/Searching/JumpSearch","title":"Jump search","description":"Like Binary Search, Jump Search is a searching algorithm for sorted arrays. The basic idea","sidebar":"tutorialSidebar"},"Algorithms/Searching/LinearSearch":{"id":"Algorithms/Searching/LinearSearch","title":"Linear Search","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/BubbleSort":{"id":"Algorithms/Sorting/BubbleSort","title":"Bubble Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/BucketSort":{"id":"Algorithms/Sorting/BucketSort","title":"Bucket Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/CountingSort":{"id":"Algorithms/Sorting/CountingSort","title":"Counting Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/HeapSort":{"id":"Algorithms/Sorting/HeapSort","title":"Heap Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/InsertionSort":{"id":"Algorithms/Sorting/InsertionSort","title":"Insertion Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/MergeSort":{"id":"Algorithms/Sorting/MergeSort","title":"Merge Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/QuickSort":{"id":"Algorithms/Sorting/QuickSort","title":"Quick Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/RadixSort":{"id":"Algorithms/Sorting/RadixSort","title":"Radix Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/SelectionSort":{"id":"Algorithms/Sorting/SelectionSort","title":"Selection Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/ShellSort":{"id":"Algorithms/Sorting/ShellSort","title":"Shell Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/Sorting/TimSort":{"id":"Algorithms/Sorting/TimSort","title":"Tim Sort","description":"View the implementation","sidebar":"tutorialSidebar"},"Algorithms/String/LevenshteinDistance":{"id":"Algorithms/String/LevenshteinDistance","title":"Levenshtein distance","description":"n information theory, linguistics and computer science, the Levenshtein distance is a","sidebar":"tutorialSidebar"},"Algorithms/Tree/BFS&DFS":{"id":"Algorithms/Tree/BFS&DFS","title":"BFS & DFS","description":"Breadth first search","sidebar":"tutorialSidebar"},"big-o-notation":{"id":"big-o-notation","title":"Big O Notation","description":"Big O notation is used to classify algorithms according to how their running time or space","sidebar":"tutorialSidebar"},"CodeChallenges/Overview":{"id":"CodeChallenges/Overview","title":"Other programming challenges","description":"Other programming challenges and problems from codesignal and leetcode sorted by","sidebar":"tutorialSidebar"},"data-structures/bloom-filter":{"id":"data-structures/bloom-filter","title":"Bloom filter","description":"A Bloom filter is a space-efficient probabilistic data structure, conceived by Burton","sidebar":"tutorialSidebar"},"data-structures/disjoint-set":{"id":"data-structures/disjoint-set","title":"Disjoint-set","description":"A disjoint-set data structure (also called a union\u2013find data structure or merge\u2013find set)","sidebar":"tutorialSidebar"},"data-structures/doubly-linked-list":{"id":"data-structures/doubly-linked-list","title":"Doubly linked list","description":"Is a linked data structure that consists of a set of sequentially linked records called","sidebar":"tutorialSidebar"},"data-structures/graph":{"id":"data-structures/graph","title":"Graph","description":"Is an abstract data type that is meant to implement the undirected graph and directed","sidebar":"tutorialSidebar"},"data-structures/hash-table":{"id":"data-structures/hash-table","title":"Hash table","description":"A hash table (hash map) is a data structure that implements an associative array abstract","sidebar":"tutorialSidebar"},"data-structures/heap":{"id":"data-structures/heap","title":"Heap","description":"Is a specialized tree-based data structure which is essentially an almost complete tree","sidebar":"tutorialSidebar"},"data-structures/linked-list":{"id":"data-structures/linked-list","title":"Linked list","description":"Is a linear collection of data elements, whose order is not given by their physical","sidebar":"tutorialSidebar"},"data-structures/overview":{"id":"data-structures/overview","title":"Data Structures","description":"In computer science, a data structure is a data organization, management, and storage","sidebar":"tutorialSidebar"},"data-structures/priority-queue":{"id":"data-structures/priority-queue","title":"Priority queue","description":"Is an abstract data type similar to regular queue or stack data structure in which each","sidebar":"tutorialSidebar"},"data-structures/queue":{"id":"data-structures/queue","title":"Queue","description":"Is a collection of entities that are maintained in a sequence and can be modified by the","sidebar":"tutorialSidebar"},"data-structures/stack":{"id":"data-structures/stack","title":"Stack","description":"A stack is an abstract data type that serves as a collection of elements, with two","sidebar":"tutorialSidebar"},"data-structures/tree":{"id":"data-structures/tree","title":"Tree","description":"is a widely used abstract data type (ADT) that simulates a hierarchical tree structure,","sidebar":"tutorialSidebar"},"data-structures/trie":{"id":"data-structures/trie","title":"Trie","description":"Also called digital tree or prefix tree, is a kind of search tree\u2014an ordered tree data","sidebar":"tutorialSidebar"},"installation":{"id":"installation","title":"Installation","description":"Contributing","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Js algorithms repository contains JavaScript","sidebar":"tutorialSidebar"}}}}')}}]);