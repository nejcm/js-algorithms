"use strict";(self.webpackChunk_nejcm_js_algorithms=self.webpackChunk_nejcm_js_algorithms||[]).push([[1579],{5461:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>h,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Algorithms/Searching/BinarySearch","title":"Binary search","description":"Also known as half-interval search, logarithmic search, or binary chop, is a search","source":"@site/docs/Algorithms/Searching/BinarySearch.mdx","sourceDirName":"Algorithms/Searching","slug":"/Algorithms/Searching/BinarySearch","permalink":"/js-algorithms/docs/Algorithms/Searching/BinarySearch","draft":false,"unlisted":false,"editUrl":"https://github.com/nejcm/js-algorithms/edit/main/docs/Algorithms/Searching/BinarySearch.mdx","tags":[],"version":"current","frontMatter":{"name":"Binary search","route":"/algorithms/searching/binary-search","menu":"Searching"},"sidebar":"tutorialSidebar","previous":{"title":"Z Algorithm","permalink":"/js-algorithms/docs/Algorithms/Pattern/ZAlgorithm"},"next":{"title":"Interpolation Search","permalink":"/js-algorithms/docs/Algorithms/Searching/InterpolationSearch"}}');var i=r(4848),a=r(8453);const s={name:"Binary search",route:"/algorithms/searching/binary-search",menu:"Searching"},h="Binary search",l={},c=[{value:"Complexity",id:"complexity",level:2},{value:"References",id:"references",level:2}];function o(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"binary-search",children:"Binary search"})}),"\n",(0,i.jsx)(t.p,{children:"Also known as half-interval search, logarithmic search, or binary chop, is a search\nalgorithm that finds the position of a target value within a sorted array. Binary search\ncompares the target value to the middle element of the array. If they are not equal, the\nhalf in which the target cannot lie is eliminated and the search continues on the\nremaining half, again taking the middle element to compare to the target value, and\nrepeating this until the target value is found. If the search ends with the remaining half\nbeing empty, the target is not in the array. (Source: Wikipedia)"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://upload.wikimedia.org/wikipedia/commons/8/83/Binary_Search_Depiction.svg",alt:"Algorithm Visualization"})}),"\n",(0,i.jsx)(t.h2,{id:"complexity",children:"Complexity"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Best"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Average"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Worst"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Memory"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Stable"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Comments"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Binary search"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"1"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"log(n)"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"log(n)"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"1"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"For sorted arrays"})]})})]}),"\n",(0,i.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.geeksforgeeks.org/binary-search/",children:"Geeksforgeeks"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Binary_search_algorithm",children:"Wikipedia"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.youtube.com/watch?v=P3YID7liBug&ab_channel=HackerRank",children:"YouTube"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.programiz.com/dsa/binary-search",children:"Programiz"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.hackerearth.com/practice/algorithms/searching/binary-search/tutorial/",children:"Hackerearth"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.tutorialspoint.com/data_structures_algorithms/binary_search_algorithm.htm",children:"Tutorialspoint"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>h});var n=r(6540);const i={},a=n.createContext(i);function s(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);