"use strict";(self.webpackChunk_nejcm_js_algorithms=self.webpackChunk_nejcm_js_algorithms||[]).push([[7141],{1888:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"Algorithms/Sorting/BucketSort","title":"Bucket Sort","description":"View the implementation","source":"@site/docs/Algorithms/Sorting/BucketSort.mdx","sourceDirName":"Algorithms/Sorting","slug":"/Algorithms/Sorting/BucketSort","permalink":"/js-algorithms/docs/Algorithms/Sorting/BucketSort","draft":false,"unlisted":false,"editUrl":"https://github.com/nejcm/js-algorithms/edit/main/docs/Algorithms/Sorting/BucketSort.mdx","tags":[],"version":"current","frontMatter":{"name":"Bucket sort","route":"/algorithms/sorting/bucket-sort","menu":"Sorting"},"sidebar":"tutorialSidebar","previous":{"title":"Bubble Sort","permalink":"/js-algorithms/docs/Algorithms/Sorting/BubbleSort"},"next":{"title":"Counting Sort","permalink":"/js-algorithms/docs/Algorithms/Sorting/CountingSort"}}');var i=r(4848),s=r(8453);const o={name:"Bucket sort",route:"/algorithms/sorting/bucket-sort",menu:"Sorting"},l="Bucket Sort",c={},h=[{value:"Complexity",id:"complexity",level:2},{value:"References",id:"references",level:2}];function a(t){const e={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"bucket-sort",children:"Bucket Sort"})}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/algorithms/sorting/bucket-sort/index.ts",children:"View the implementation"})}),"\n",(0,i.jsx)(e.p,{children:"Bucket sort, or bin sort, is a sorting algorithm that works by distributing the elements\nof an array into a number of buckets. Each bucket is then sorted individually, either\nusing a different sorting algorithm, or by recursively applying the bucket sorting\nalgorithm. It is a distribution sort, a generalization of pigeonhole sort, and is a cousin\nof radix sort in the most-to-least significant digit flavor. Bucket sort can be\nimplemented with comparisons and therefore can also be considered a comparison sort\nalgorithm. (Source: Wikipedia)"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.img,{src:"https://cdn.programiz.com/sites/tutorial2program/files/Bucket_2.png",alt:"Algorithm Visualization"})}),"\n",(0,i.jsx)(e.h2,{id:"complexity",children:"Complexity"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"Name"}),(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"Best"}),(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"Average"}),(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"Worst"}),(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"Memory"}),(0,i.jsx)(e.th,{style:{textAlign:"center"},children:"Stable"}),(0,i.jsx)(e.th,{style:{textAlign:"left"},children:"Comments"})]})}),(0,i.jsx)(e.tbody,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:"Bucket sort"}),(0,i.jsx)(e.td,{style:{textAlign:"center"},children:"n"}),(0,i.jsxs)(e.td,{style:{textAlign:"center"},children:["n + n",(0,i.jsx)("sup",{children:"2"}),"/k + k"]}),(0,i.jsxs)(e.td,{style:{textAlign:"center"},children:["n",(0,i.jsx)("sup",{children:"2"})]}),(0,i.jsx)(e.td,{style:{textAlign:"center"},children:"1"}),(0,i.jsx)(e.td,{style:{textAlign:"center"},children:"Yes"}),(0,i.jsx)(e.td,{style:{textAlign:"left"}})]})})]}),"\n",(0,i.jsx)(e.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://www.geeksforgeeks.org/bucket-sort-2/",children:"Geeksforgeeks"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://en.wikipedia.org/wiki/Bucket_sort",children:"Wikipedia"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://www.youtube.com/watch?v=VuXbEb5ywrU&ab_channel=GeeksforGeeks",children:"YouTube"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://www.programiz.com/dsa/bucket-sort",children:"Programiz"})}),"\n",(0,i.jsx)(e.li,{children:(0,i.jsx)(e.a,{href:"https://www.hackerearth.com/practice/algorithms/sorting/bucket-sort/tutorial/",children:"Hackerearth"})}),"\n"]})]})}function d(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(a,{...t})}):a(t)}},8453:(t,e,r)=>{r.d(e,{R:()=>o,x:()=>l});var n=r(6540);const i={},s=n.createContext(i);function o(t){const e=n.useContext(s);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function l(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:o(t.components),n.createElement(s.Provider,{value:e},t.children)}}}]);