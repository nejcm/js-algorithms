"use strict";(self.webpackChunk_nejcm_js_algorithms=self.webpackChunk_nejcm_js_algorithms||[]).push([[1964],{1482:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"Algorithms/Graph/StronglyConnectedComponents","title":"Strongly Connected Components","description":"View the implementation","source":"@site/docs/Algorithms/Graph/StronglyConnectedComponents.mdx","sourceDirName":"Algorithms/Graph","slug":"/Algorithms/Graph/StronglyConnectedComponents","permalink":"/js-algorithms/docs/Algorithms/Graph/StronglyConnectedComponents","draft":false,"unlisted":false,"editUrl":"https://github.com/nejcm/js-algorithms/edit/main/docs/Algorithms/Graph/StronglyConnectedComponents.mdx","tags":[],"version":"current","frontMatter":{"name":"Strongly connected components","route":"/algorithms/graph/strongly-connected-components","menu":"Graph"},"sidebar":"tutorialSidebar","previous":{"title":"Prim\'s Algorithm","permalink":"/js-algorithms/docs/Algorithms/Graph/Prim"},"next":{"title":"Topological Sort","permalink":"/js-algorithms/docs/Algorithms/Graph/TopologicalSort"}}');var o=n(4848),s=n(8453);const i={name:"Strongly connected components",route:"/algorithms/graph/strongly-connected-components",menu:"Graph"},c="Strongly Connected Components",l={},h=[{value:"Complexity",id:"complexity",level:2},{value:"References",id:"references",level:2}];function a(e){const t={a:"a",br:"br",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"strongly-connected-components",children:"Strongly Connected Components"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/algorithms/graph/strongly-connected-components/index.ts",children:"View the implementation"})}),"\n",(0,o.jsx)(t.p,{children:"A graph is said to be strongly connected if every vertex is reachable from every other\nvertex. The strongly connected components of an arbitrary directed graph form a partition\ninto subgraphs that are themselves strongly connected. It is possible to test the strong\nconnectivity of a graph, or to find its strongly connected components, in linear time."}),"\n",(0,o.jsx)(t.p,{children:"A directed graph is called strongly connected if there is a path in each direction between\neach pair of vertices of the graph. That is, a path exists from the first vertex in the\npair to the second, and another path exists from the second vertex to the first. In a\ndirected graph G that may not itself be strongly connected, a pair of vertices u and v are\nsaid to be strongly connected to each other if there is a path in each direction between\nthem. [Source: Wikipedia]"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://upload.wikimedia.org/wikipedia/commons/5/5c/Scc.png",alt:"Strongly connected components"})}),"\n",(0,o.jsx)(t.h2,{id:"complexity",children:"Complexity"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{style:{textAlign:"left"},children:"Name"}),(0,o.jsx)(t.th,{style:{textAlign:"center"},children:"Best time"}),(0,o.jsx)(t.th,{style:{textAlign:"center"},children:"Space"}),(0,o.jsx)(t.th,{style:{textAlign:"left"},children:"Comments"})]})}),(0,o.jsx)(t.tbody,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{style:{textAlign:"left"},children:"Strongly connected components"}),(0,o.jsx)(t.td,{style:{textAlign:"center"},children:"v + e"}),(0,o.jsx)(t.td,{style:{textAlign:"center"},children:"v + e"}),(0,o.jsx)(t.td,{style:{textAlign:"left"}})]})})]}),"\n",(0,o.jsxs)(t.p,{children:["* Where v = number of visited vertices; e = number of visited edges",(0,o.jsx)(t.br,{}),"\n","* Where b = branching factor of the tree/graph, d = depth of the goal node."]}),"\n",(0,o.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://www.geeksforgeeks.org/strongly-connected-components/",children:"Geeksforgeeks"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Strongly_connected_component",children:"Wikipedia"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://www.youtube.com/watch?v=5wFyZJ8yH9Q&ab_channel=GeeksforGeeks",children:"YouTube"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://www.programiz.com/dsa/strongly-connected-components",children:"Programiz"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://www.hackerearth.com/practice/algorithms/graphs/strongly-connected-components/tutorial/",children:"Hackerearth"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://cp-algorithms.com/graph/strongly-connected-components.html",children:"cp-algorithms"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var r=n(6540);const o={},s=r.createContext(o);function i(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);