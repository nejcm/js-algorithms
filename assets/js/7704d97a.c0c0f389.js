"use strict";(self.webpackChunk_nejcm_js_algorithms=self.webpackChunk_nejcm_js_algorithms||[]).push([[3508],{1631:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"data-structures/doubly-linked-list","title":"Doubly linked list","description":"Is a linked data structure that consists of a set of sequentially linked records called","source":"@site/docs/data-structures/doubly-linked-list.md","sourceDirName":"data-structures","slug":"/data-structures/doubly-linked-list","permalink":"/js-algorithms/docs/data-structures/doubly-linked-list","draft":false,"unlisted":false,"editUrl":"https://github.com/nejcm/js-algorithms/edit/main/docs/data-structures/doubly-linked-list.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Data Structures","permalink":"/js-algorithms/docs/data-structures/overview"},"next":{"title":"Hash table","permalink":"/js-algorithms/docs/data-structures/hash-table"}}');var i=n(4848),l=n(8453);const r={sidebar_position:2},o="Doubly linked list",d={},a=[{value:"Complexity",id:"complexity",level:2},{value:"References",id:"references",level:2}];function c(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"doubly-linked-list",children:"Doubly linked list"})}),"\n",(0,i.jsx)(t.p,{children:"Is a linked data structure that consists of a set of sequentially linked records called\nnodes. Each node contains three fields: two link fields (references to the previous and to\nthe next node in the sequence of nodes) and one data field. The beginning and ending\nnodes' previous and next links, respectively, point to some kind of terminator, typically\na sentinel node or null, to facilitate traversal of the list. If there is only one\nsentinel node, then the list is circularly linked via the sentinel node. It can be\nconceptualized as two singly linked lists formed from the same data items, but in opposite\nsequential orders."}),"\n",(0,i.jsx)(t.p,{children:"The two node links allow traversal of the list in either direction. While adding or\nremoving a node in a doubly linked list requires changing more links than the same\noperations on a singly linked list, the operations are simpler and potentially more\nefficient (for nodes other than first nodes) because there is no need to keep track of the\nprevious node during traversal or no need to traverse the list to find the previous node,\nso that its link can be modified. (Source: Wikipedia)"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://media.geeksforgeeks.org/wp-content/cdn-uploads/gq/2014/03/DLL1.png",alt:"Data Structure Visualization"})}),"\n",(0,i.jsx)(t.h2,{id:"complexity",children:"Complexity"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Access"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Search"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Insertion"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Deletion"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Comments"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"O(1)"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"O(n)"}),(0,i.jsx)(t.td,{style:{textAlign:"left"}})]})})]}),"\n",(0,i.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.geeksforgeeks.org/doubly-linked-list/",children:"Geeksforgeeks"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Doubly_linked_list",children:"Wikipedia"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.youtube.com/watch?v=ZlNKNSz88Nk",children:"YouTube"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.programiz.com/dsa/linked-list-types#doubly",children:"Programiz"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.tutorialspoint.com/data_structures_algorithms/doubly_linked_list_algorithm.htm",children:"Tutorialspoint"})}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const i={},l=s.createContext(i);function r(e){const t=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:t},e.children)}}}]);