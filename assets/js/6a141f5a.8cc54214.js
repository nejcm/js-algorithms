"use strict";(self.webpackChunk_nejcm_js_algorithms=self.webpackChunk_nejcm_js_algorithms||[]).push([[440],{3087:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"Algorithms/Sorting/BubbleSort","title":"Bubble Sort","description":"View the implementation","source":"@site/docs/Algorithms/Sorting/BubbleSort.mdx","sourceDirName":"Algorithms/Sorting","slug":"/Algorithms/Sorting/BubbleSort","permalink":"/js-algorithms/docs/Algorithms/Sorting/BubbleSort","draft":false,"unlisted":false,"editUrl":"https://github.com/nejcm/js-algorithms/edit/main/docs/Algorithms/Sorting/BubbleSort.mdx","tags":[],"version":"current","frontMatter":{"name":"Bubble sort","route":"/algorithms/sorting/bubble-sort","menu":"Sorting"},"sidebar":"tutorialSidebar","previous":{"title":"Linear Search","permalink":"/js-algorithms/docs/Algorithms/Searching/LinearSearch"},"next":{"title":"Bucket Sort","permalink":"/js-algorithms/docs/Algorithms/Sorting/BucketSort"}}');var i=r(4848),n=r(8453);const l={name:"Bubble sort",route:"/algorithms/sorting/bubble-sort",menu:"Sorting"},o="Bubble Sort",a={},h=[{value:"Complexity",id:"complexity",level:2},{value:"References",id:"references",level:2}];function c(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"bubble-sort",children:"Bubble Sort"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://github.com/nejcm/js-algorithms/blob/master/src/algorithms/sorting/bubble-sort/index.ts",children:"View the implementation"})}),"\n",(0,i.jsx)(t.p,{children:"Bubble sort, sometimes referred to as sinking sort, is a simple sorting algorithm that\nrepeatedly steps through the list to be sorted, compares each pair of adjacent items and\nswaps them if they are in the wrong order (ascending or descending arrangement). The pass\nthrough the list is repeated until no swaps are needed, which indicates that the list is\nsorted."}),"\n",(0,i.jsx)(t.p,{children:"This simple algorithm performs poorly in real world use and is used primarily as an\neducational tool. More efficient algorithms such as timsort, or merge sort are used by the\nsorting libraries built into popular programming languages such as Python and Java.\n(Source: Wikipedia)"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:"https://upload.wikimedia.org/wikipedia/commons/c/c8/Bubble-sort-example-300px.gif",alt:"Algorithm Visualization"})}),"\n",(0,i.jsx)(t.h2,{id:"complexity",children:"Complexity"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Name"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Best"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Average"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Worst"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Memory"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Stable"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Comments"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Bubble sort"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"n"}),(0,i.jsxs)(t.td,{style:{textAlign:"center"},children:["n",(0,i.jsx)("sup",{children:"2"})]}),(0,i.jsxs)(t.td,{style:{textAlign:"center"},children:["n",(0,i.jsx)("sup",{children:"2"})]}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"1"}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:"Yes"}),(0,i.jsx)(t.td,{style:{textAlign:"left"}})]})})]}),"\n",(0,i.jsx)(t.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.geeksforgeeks.org/bubble-sort/",children:"Geeksforgeeks"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Bubble_sort",children:"Wikipedia"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.youtube.com/watch?v=6Gv8vg0kcHc&ab_channel=HackerRank",children:"YouTube"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.programiz.com/dsa/bubble-sort",children:"Programiz"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"http://www.algomation.com/player?algorithm=58b307b11adc730400031082",children:"Algomation"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.hackerearth.com/practice/algorithms/sorting/bubble-sort/tutorial/",children:"Hackerearth"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://www.tutorialspoint.com/data_structures_algorithms/bubble_sort_algorithm.htm",children:"Tutorialspoint"})}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>o});var s=r(6540);const i={},n=s.createContext(i);function l(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);