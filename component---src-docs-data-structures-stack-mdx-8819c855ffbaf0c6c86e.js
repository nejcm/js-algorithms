(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{Wy88:function(t,e,a){"use strict";a.r(e),a.d(e,"_frontmatter",(function(){return c})),a.d(e,"default",(function(){return l}));a("5hJT"),a("W1QL"),a("K/PF"),a("t91x"),a("75LO"),a("PJhk"),a("mXGw");var r=a("/FXl"),n=a("TjRS");a("aD51");function i(){return(i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var a=arguments[e];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(t[r]=a[r])}return t}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/DataStructures/Stack.mdx"}});var o={_frontmatter:c},s=n.a;function l(t){var e=t.components,a=function(t,e){if(null==t)return{};var a,r,n={},i=Object.keys(t);for(r=0;r<i.length;r++)a=i[r],e.indexOf(a)>=0||(n[a]=t[a]);return n}(t,["components"]);return Object(r.b)(s,i({},o,a,{components:e,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"stack"},"Stack"),Object(r.b)("p",null,"A stack is an abstract data type that serves as a collection of elements, with\ntwo principal operations:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"push"),", which adds an element to the collection;"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"pop"),", which removes the most recently added element that was not yet\nremoved;")),Object(r.b)("p",null,'The order in which elements come off a stack gives rise to its alternative name,\nLIFO (last in, first out). Additionally, a peek operation may give access to the\ntop without modifying the stack. The name "stack" for this type of structure\ncomes from the analogy to a set of physical items stacked on top of each other.\nThis structure makes it easy to take an item off the top of the stack, while\ngetting to an item deeper in the stack may require taking off multiple other\nitems first. (Source: Wikipedia)'),Object(r.b)("p",null,Object(r.b)("img",{alt:"Data Structure Visualization",src:"https://upload.wikimedia.org/wikipedia/commons/b/b4/Lifo_stack.png"})),Object(r.b)("h2",{id:"references"},"References"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",i({parentName:"li"},{href:"https://www.geeksforgeeks.org/stack-data-structure/"}),"Geeksforgeeks")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",i({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Stack_(abstract_data_type)"}),"Wikipedia")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",i({parentName:"li"},{href:"https://www.youtube.com/watch?v=wjI1WNcIntg"}),"YouTube")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",i({parentName:"li"},{href:"https://www.programiz.com/dsa/stack"}),"Programiz")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",i({parentName:"li"},{href:"https://www.hackerearth.com/practice/data-structures/stacks/basics-of-stacks/tutorial/"}),"Hackerearth")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",i({parentName:"li"},{href:"https://www.tutorialspoint.com/data_structures_algorithms/stack_algorithm.htm"}),"Tutorialspoint"))))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/DataStructures/Stack.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-data-structures-stack-mdx-8819c855ffbaf0c6c86e.js.map