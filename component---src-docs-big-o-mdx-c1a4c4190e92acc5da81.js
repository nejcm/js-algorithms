(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{oww7:function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return i})),n.d(e,"default",(function(){return m}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var a=n("/FXl"),r=n("TjRS"),b=n("t8UX"),l=n.n(b);n("aD51");function c(){return(c=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(t[a]=n[a])}return t}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/BigO.mdx"}});var p={_frontmatter:i},O=r.a;function m(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,a,r={},b=Object.keys(t);for(a=0;a<b.length;a++)n=b[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,["components"]);return Object(a.b)(O,c({},p,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"big-o-notation"},"Big O Notation"),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Big O notation")," is used to classify algorithms according to how their running\ntime or space requirements grow as the input size grows. On the chart below you\nmay find most common orders of growth of algorithms specified in Big O notation."),Object(a.b)("img",{src:l.a,width:"100%",height:"auto",alt:"Big O graphs"}),Object(a.b)("p",null,"Source: ",Object(a.b)("a",c({parentName:"p"},{href:"http://bigocheatsheet.com/"}),"Big O Cheat Sheet"),"."),Object(a.b)("p",null,"More info:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"https://www.geeksforgeeks.org/analysis-algorithms-big-o-analysis/"}),"Geeksforgeeks")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Big_O_notation"}),"Wikipedia")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",c({parentName:"li"},{href:"https://www.youtube.com/watch?v=v4cd1O4zkGw"}),"Youtube"))),Object(a.b)("hr",null),Object(a.b)("p",null,"Below is the list of some of the most used Big O notations and their performance\ncomparisons against different sizes of the input data."),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",c({parentName:"tr"},{align:null}),"Big O Notation"),Object(a.b)("th",c({parentName:"tr"},{align:null}),"Computations for 10 elements"),Object(a.b)("th",c({parentName:"tr"},{align:null}),"Computations for 100 elements"),Object(a.b)("th",c({parentName:"tr"},{align:null}),"Computations for 1000 elements"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"O(1)")),Object(a.b)("td",c({parentName:"tr"},{align:null}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"1")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"O(log N)")),Object(a.b)("td",c({parentName:"tr"},{align:null}),"3"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"6"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"9")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"O(N)")),Object(a.b)("td",c({parentName:"tr"},{align:null}),"10"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"100"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"1000")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"O(N log N)")),Object(a.b)("td",c({parentName:"tr"},{align:null}),"30"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"600"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"9000")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"O(N^2)")),Object(a.b)("td",c({parentName:"tr"},{align:null}),"100"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"10000"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"1000000")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"O(2^N)")),Object(a.b)("td",c({parentName:"tr"},{align:null}),"1024"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"1.26e+29"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"1.07e+301")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"O(N!)")),Object(a.b)("td",c({parentName:"tr"},{align:null}),"3628800"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"9.3e+157"),Object(a.b)("td",c({parentName:"tr"},{align:null}),"4.02e+2567")))),Object(a.b)("h3",{id:"data-structure-operations-complexity"},"Data Structure Operations Complexity"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",c({parentName:"tr"},{align:null}),"Data Structure"),Object(a.b)("th",c({parentName:"tr"},{align:"center"}),"Access"),Object(a.b)("th",c({parentName:"tr"},{align:"center"}),"Search"),Object(a.b)("th",c({parentName:"tr"},{align:"center"}),"Insertion"),Object(a.b)("th",c({parentName:"tr"},{align:"center"}),"Deletion"),Object(a.b)("th",c({parentName:"tr"},{align:"left"}),"Comments"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Array")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Stack")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Queue")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Linked List")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Hash Table")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"-"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}),"In case of perfect hash function costs would be O(1)")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Binary Search Tree")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}),"In case of balanced tree costs would be O(log(n))")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"B-Tree")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Red-Black Tree")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"AVL Tree")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Bloom Filter")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"-"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"-"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}),"False positives are possible while searching")))),Object(a.b)("h3",{id:"array-sorting-algorithms-complexity"},"Array Sorting Algorithms Complexity"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",c({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",c({parentName:"tr"},{align:"center"}),"Best"),Object(a.b)("th",c({parentName:"tr"},{align:"center"}),"Average"),Object(a.b)("th",c({parentName:"tr"},{align:"center"}),"Worst"),Object(a.b)("th",c({parentName:"tr"},{align:"center"}),"Memory"),Object(a.b)("th",c({parentName:"tr"},{align:"center"}),"Stable"),Object(a.b)("th",c({parentName:"tr"},{align:"left"}),"Comments"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Bubble sort")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n",Object(a.b)("sup",null,"2")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n",Object(a.b)("sup",null,"2")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"Yes"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Insertion sort")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n",Object(a.b)("sup",null,"2")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n",Object(a.b)("sup",null,"2")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"Yes"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Selection sort")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n",Object(a.b)("sup",null,"2")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n",Object(a.b)("sup",null,"2")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n",Object(a.b)("sup",null,"2")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"No"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Heap sort")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"," ","log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"," ","log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"," ","log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"No"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Merge sort")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"," ","log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"," ","log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"," ","log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"Yes"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Quick sort")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"," ","log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"," ","log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n",Object(a.b)("sup",null,"2")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"No"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}),"Quicksort is usually done in-place with O(log(n)) stack space")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Shell sort")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"," ","log(n)"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"depends on gap sequence"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n"," ","(log(n))",Object(a.b)("sup",null,"2")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"No"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Counting sort")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n + r"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n + r"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n + r"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n + r"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"Yes"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}),"r - biggest number in array")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",c({parentName:"tr"},{align:null}),Object(a.b)("strong",{parentName:"td"},"Radix sort")),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n ","*"," k"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n ","*"," k"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n ","*"," k"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"n + k"),Object(a.b)("td",c({parentName:"tr"},{align:"center"}),"Yes"),Object(a.b)("td",c({parentName:"tr"},{align:"left"}),"k - length of longest key")))))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/BigO.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-big-o-mdx-c1a4c4190e92acc5da81.js.map