(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"2W9n":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return o})),n.d(t,"default",(function(){return l}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var a=n("/FXl"),r=n("TjRS");n("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var o={};void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Algorithms/Searching/InterpolationSearch.mdx"}});var s={_frontmatter:o},c=r.a;function l(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(c,i({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"interpolation-search"},"Interpolation Search"),Object(a.b)("p",null,"Interpolation search is an algorithm for searching for a key in an array that\nhas been ordered by numerical values assigned to the keys (key values). It was\nfirst described by W. W. Peterson in 1957. Interpolation search resembles the\nmethod by which people search a telephone directory for a name (the key value by\nwhich the book's entries are ordered): in each step the algorithm calculates\nwhere in the remaining search space the sought item might be, based on the key\nvalues at the bounds of the search space and the value of the sought key,\nusually via a linear interpolation. The key value actually found at this\nestimated position is then compared to the key value being sought. If it is not\nequal, then depending on the comparison, the remaining search space is reduced\nto the part before or after the estimated position. This method will only work\nif calculations on the size of differences between key values are sensible."),Object(a.b)("p",null,"By comparison, binary search always chooses the middle of the remaining search\nspace, discarding one half or the other, depending on the comparison between the\nkey found at the estimated position and the key sought â€” it does not require\nnumerical values for the keys, just a total order on them. The remaining search\nspace is reduced to the part before or after the estimated position. The linear\nsearch uses equality only as it compares elements one-by-one from the start,\nignoring any sorting. (Source: Wikipedia)"),Object(a.b)("h2",{id:"complexity"},"Complexity"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",i({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",i({parentName:"tr"},{align:"center"}),"Best"),Object(a.b)("th",i({parentName:"tr"},{align:"center"}),"Average"),Object(a.b)("th",i({parentName:"tr"},{align:"center"}),"Worst"),Object(a.b)("th",i({parentName:"tr"},{align:"center"}),"Memory"),Object(a.b)("th",i({parentName:"tr"},{align:"center"}),"Stable"),Object(a.b)("th",i({parentName:"tr"},{align:"left"}),"Comments"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",i({parentName:"tr"},{align:null}),"Interpolation search"),Object(a.b)("td",i({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",i({parentName:"tr"},{align:"center"}),"log(log(n))"),Object(a.b)("td",i({parentName:"tr"},{align:"center"}),"n"),Object(a.b)("td",i({parentName:"tr"},{align:"center"}),"1"),Object(a.b)("td",i({parentName:"tr"},{align:"center"}),"Yes"),Object(a.b)("td",i({parentName:"tr"},{align:"left"}),"For sorted arrays")))),Object(a.b)("h2",{id:"references"},"References"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",i({parentName:"li"},{href:"https://www.geeksforgeeks.org/interpolation-search/"}),"Geeksforgeeks")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("a",i({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Interpolation_search"}),"Wikipedia"))))}void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Algorithms/Searching/InterpolationSearch.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-algorithms-searching-interpolation-search-mdx-e632ccf425521d4a41fb.js.map