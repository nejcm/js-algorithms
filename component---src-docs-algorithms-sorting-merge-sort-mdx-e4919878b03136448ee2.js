(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{gNWz:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return o})),a.d(t,"default",(function(){return s}));var r=a("Fcif"),n=a("+I+c"),b=(a("mXGw"),a("/FXl")),i=a("TjRS"),o=(a("aD51"),{});void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/Algorithms/Sorting/MergeSort.mdx"}});var c={_frontmatter:o},l=i.a;function s(e){var t=e.components,a=Object(n.a)(e,["components"]);return Object(b.b)(l,Object(r.a)({},c,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"merge-sort"},"Merge Sort"),Object(b.b)("p",null,"In computer science, merge sort (also commonly spelled mergesort) is an efficient,\ngeneral-purpose, comparison-based sorting algorithm. Most implementations produce a stable\nsort, which means that the order of equal elements is the same in the input and output.\nMerge sort is a divide and conquer algorithm that was invented by John von Neumann\nin 1945. Conceptually, a merge sort works as follows (Source: Wikipedia):"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},"Divide the unsorted list into n sublists, each containing one element (a list of one\nelement is considered sorted)."),Object(b.b)("li",{parentName:"ul"},"Repeatedly merge sublists to produce new sorted sublists until there is only one sublist\nremaining. This will be the sorted list.")),Object(b.b)("p",null,Object(b.b)("img",{alt:"Merge Sort",src:"https://upload.wikimedia.org/wikipedia/commons/c/cc/Merge-sort-example-300px.gif"})),Object(b.b)("p",null,"A recursive merge sort algorithm used to sort an array of 7 integer values. These are the\nsteps a human would take to emulate merge sort (top-down)."),Object(b.b)("p",null,Object(b.b)("img",{alt:"Merge Sort",src:"https://upload.wikimedia.org/wikipedia/commons/e/e6/Merge_sort_algorithm_diagram.svg"})),Object(b.b)("h2",{id:"complexity"},"Complexity"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Best"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Average"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Worst"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Memory"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:"center"}),"Stable"),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:"left"}),"Comments"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Merge sort"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"n","*","log(n)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"n","*","log(n)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"n","*","log(n)"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"n"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:"center"}),"Yes"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:"left"}))))),Object(b.b)("h2",{id:"references"},"References"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.geeksforgeeks.org/merge-sort/"}),"Geeksforgeeks")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(r.a)({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Merge_sort"}),"Wikipedia")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.youtube.com/watch?v=KF2j-9iSf4Q"}),"YouTube")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.programiz.com/dsa/merge-sort"}),"Programiz")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(r.a)({parentName:"li"},{href:"http://www.algomation.com/player?algorithm=58bb32885b2b830400b05123"}),"Algomation")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.hackerearth.com/practice/algorithms/sorting/merge-sort/tutorial/"}),"Hackerearth")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.tutorialspoint.com/data_structures_algorithms/merge_sort_algorithm.htm"}),"Tutorialspoint"))))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/Algorithms/Sorting/MergeSort.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-algorithms-sorting-merge-sort-mdx-e4919878b03136448ee2.js.map