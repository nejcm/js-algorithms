{"version":3,"sources":["webpack:///../src/docs/Algorithms/Sorting/MergeSort.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,2NAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,cADR,cAGA,gcAMA,sBACE,kBAAIC,WAAW,MAAf,wHAEA,kBAAIA,WAAW,MAAf,uIAGF,qBAAG,mBAAKC,IAAI,aAAaC,IAAI,sFAC7B,8KAEA,qBAAG,mBAAKD,IAAI,aAAaC,IAAI,0FAC7B,iBAAQ,CACN,GAAM,cADR,cAGA,yBACE,qBAAOF,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SADX,cAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,cAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,KAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,WADX,OAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,aAKjB,iBAAQ,CACN,GAAM,cADR,cAGA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,8CADQ,kBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6CADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,gDADQ,YAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,6CADQ,cAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wEADQ,eAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,iFADQ,gBAGpB,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,uFADQ,0B,yNAQ1BJ,EAAWO,gBAAiB","file":"component---src-docs-algorithms-sorting-merge-sort-mdx-60c58e2312267949c52a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/nejcm/js-algorithms/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"merge-sort\"\n    }}>{`Merge Sort`}</h1>\n    <p>{`In computer science, merge sort (also commonly spelled mergesort) is an\nefficient, general-purpose, comparison-based sorting algorithm. Most\nimplementations produce a stable sort, which means that the order of equal\nelements is the same in the input and output. Merge sort is a divide and conquer\nalgorithm that was invented by John von Neumann in 1945. Conceptually, a merge\nsort works as follows (Source: Wikipedia):`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Divide the unsorted list into n sublists, each containing one element (a list\nof one element is considered sorted).`}</li>\n      <li parentName=\"ul\">{`Repeatedly merge sublists to produce new sorted sublists until there is only\none sublist remaining. This will be the sorted list.`}</li>\n    </ul>\n    <p><img alt=\"Merge Sort\" src=\"https://upload.wikimedia.org/wikipedia/commons/c/cc/Merge-sort-example-300px.gif\" /></p>\n    <p>{`A recursive merge sort algorithm used to sort an array of 7 integer values.\nThese are the steps a human would take to emulate merge sort (top-down).`}</p>\n    <p><img alt=\"Merge Sort\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e6/Merge_sort_algorithm_diagram.svg\" /></p>\n    <h2 {...{\n      \"id\": \"complexity\"\n    }}>{`Complexity`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Best`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Average`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Worst`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Memory`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Stable`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Comments`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Merge sort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n`}{` `}{`log(n)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n`}{` `}{`log(n)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n`}{` `}{`log(n)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`n`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"center\"\n          }}>{`Yes`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"references\"\n    }}>{`References`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.geeksforgeeks.org/merge-sort/\"\n        }}>{`Geeksforgeeks`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://en.wikipedia.org/wiki/Merge_sort\"\n        }}>{`Wikipedia`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.youtube.com/watch?v=KF2j-9iSf4Q\"\n        }}>{`YouTube`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.programiz.com/dsa/merge-sort\"\n        }}>{`Programiz`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://www.algomation.com/player?algorithm=58bb32885b2b830400b05123\"\n        }}>{`Algomation`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.hackerearth.com/practice/algorithms/sorting/merge-sort/tutorial/\"\n        }}>{`Hackerearth`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.tutorialspoint.com/data_structures_algorithms/merge_sort_algorithm.htm\"\n        }}>{`Tutorialspoint`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}