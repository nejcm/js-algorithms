(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{"7FBX":function(e,t,r){"use strict";r.r(t),r.d(t,"_frontmatter",(function(){return a})),r.d(t,"default",(function(){return c}));r("5hJT"),r("W1QL"),r("K/PF"),r("t91x"),r("75LO"),r("PJhk"),r("mXGw");var i=r("/FXl"),n=r("TjRS");r("aD51");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(e[i]=r[i])}return e}).apply(this,arguments)}var a={};void 0!==a&&a&&a===Object(a)&&Object.isExtensible(a)&&!a.hasOwnProperty("__filemeta")&&Object.defineProperty(a,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/DataStructures/BloomFilter.mdx"}});var l={_frontmatter:a},s=n.a;function c(e){var t=e.components,r=function(e,t){if(null==e)return{};var r,i,n={},o=Object.keys(e);for(i=0;i<o.length;i++)r=o[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,["components"]);return Object(i.b)(s,o({},l,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"bloom-filter"},"Bloom filter"),Object(i.b)("p",null,'A Bloom filter is a space-efficient probabilistic data structure, conceived by\nBurton Howard Bloom in 1970, that is used to test whether an element is a member\nof a set. False positive matches are possible, but false negatives are not â€“ in\nother words, a query returns either "possibly in set" or "definitely not in\nset." Elements can be added to the set, but not removed (though this can be\naddressed with the counting Bloom filter variant); the more items added, the\nlarger the probability of false positives. (Source: Wikipedia)'),Object(i.b)("p",null,Object(i.b)("img",{alt:"Data Structure Visualization",src:"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/Bloom_filter.svg/360px-Bloom_filter.svg.png"})),Object(i.b)("h2",{id:"references"},"References"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",o({parentName:"li"},{href:"https://www.geeksforgeeks.org/bloom-filters-introduction-and-python-implementation/"}),"Geeksforgeeks")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",o({parentName:"li"},{href:"https://en.wikipedia.org/wiki/Bloom_filter"}),"Wikipedia")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",o({parentName:"li"},{href:"https://www.youtube.com/watch?v=bEmBh1HtYrw"}),"YouTube")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",o({parentName:"li"},{href:"https://hackernoon.com/probabilistic-data-structures-bloom-filter-5374112a7832"}),"Hackernoon"))))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/DataStructures/BloomFilter.mdx"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-data-structures-bloom-filter-mdx-f25abfed07a0daed145d.js.map