(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{IDyR:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return s})),a.d(t,"default",(function(){return o}));var r=a("Fcif"),b=a("+I+c"),n=(a("mXGw"),a("/FXl")),i=a("TjRS"),c=a("ZFoC"),s=(a("aD51"),{});void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/docs/DataStructures/Overview.mdx"}});var l={_frontmatter:s},m=i.a;function o(e){var t=e.components,a=Object(b.a)(e,["components"]);return Object(n.b)(m,Object(r.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"data-structures"},"Data Structures"),Object(n.b)("p",null,"In computer science, a data structure is a data organization, management, and storage\nformat that enables efficient access and modification. More precisely, a data structure is\na collection of data values, the relationships among them, and the functions or operations\nthat can be applied to the data. (Source: Wikipedia)"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://www.youtube.com/watch?v=RBSGKlAvoiM&ab_channel=freeCodeCamp.org"}),"YouTube"))),Object(n.b)("p",null,Object(n.b)("inlineCode",{parentName:"p"},"B")," - Beginner, ",Object(n.b)("inlineCode",{parentName:"p"},"A")," - Advanced"),Object(n.b)("p",null,"*"," Algorithms without the ",Object(n.b)("em",{parentName:"p"},"Code")," link are not implemented yet."),Object(n.b)("br",null),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/doubly-linked-list",mdxType:"Link"},"Doubly linked\nlist"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/doubly-linked-list/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/hash-table",mdxType:"Link"},"Hash table"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/hash-table/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/heap",mdxType:"Link"},"Heap"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/heap/index.ts"}),"Code"),"]",Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," Min heap\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/heap/min.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," Max heap\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/heap/max.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," Fibonacci heap"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/linked-list",mdxType:"Link"},"Linked list"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/linked-list/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/priority-queue",mdxType:"Link"},"Priority queue"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/priority-queue/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/queue",mdxType:"Link"},"Queue"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/queue/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"B")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/stack",mdxType:"Link"},"Stack"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/stack/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/trees",mdxType:"Link"},"Trees"),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," AVL tree\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/tree/avl-tree/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," Binary search tree\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/tree/binary-search-tree/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," Fenwick tree\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/tree/fenwick-tree/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," Red-Black tree\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/tree/red-black-tree/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," Segment tree\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/tree/segment-tree/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," B-tree"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," Splay tree"))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/trie",mdxType:"Link"},"Trie"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/trie/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/graph",mdxType:"Link"},"Graph"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/graph/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/disjoint-set",mdxType:"Link"},"Disjoint Set"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/disjoint-set/index.ts"}),"Code"),"]"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"A")," ",Object(n.b)(c.b,{className:"link",to:"/data-structures/bloom-filter",mdxType:"Link"},"Bloom Filter"),"\n[",Object(n.b)("a",Object(r.a)({parentName:"li"},{href:"https://github.com/nejcm/js-algorithms/blob/master/src/data-structures/bloom-filter/index.ts"}),"Code"),"]")))}void 0!==o&&o&&o===Object(o)&&Object.isExtensible(o)&&!o.hasOwnProperty("__filemeta")&&Object.defineProperty(o,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/docs/DataStructures/Overview.mdx"}}),o.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-docs-data-structures-overview-mdx-6f65a481d3ae5338b9a7.js.map